{"version":3,"file":"visual.js","mappings":";;;;;;;;;;;AAEA,oCAAoC;AAG7B,MAAM,UAAU;IACb,MAAM,CAAC,WAAW,CAAa;IACvC;QACE,UAAU,CAAC,OAAO,EAAE,CAAC;QACrB,UAAU,CAAC,cAAc,EAAE,CAAC;IAC9B,CAAC;IACO,MAAM,CAAC,KAAK,CAAC,UAAe,EAAE;QACpC,OAAO,CAAC,KAAK,CAAC,mCAAmC,CAAC,CAAC;QACnD,OAAO,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;QACrB,OAAO,CAAC,QAAQ,EAAE,CAAC;IACrB,CAAC;IACM,MAAM,CAAC,cAAc;QAC1B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,MAAM,UAAU,GAAgB,UAAU,CAAC,WAAW,EAAE,aAAa,CAAC,aAAa,CAAC,CAAC;QAErF,IAAI,UAAU,EAAE;YACd,UAAU,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,KAAK;gBAClD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAE3B,MAAM,UAAU,GAAgB,UAAU,CAAC,WAAW,EAAE,aAAa,CAAC,QAAQ,CAAC,CAAC;gBAEhF,IAAI,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAEzC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;iBACpC;qBAAM;oBAEL,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;iBACjC;YAEH,CAAC,CAAC,CAAC;SACJ;IACH,CAAC;IAEM,MAAM,CAAC,OAAO;QACnB,UAAU,CAAC,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QACvD,UAAU,CAAC,WAAW,CAAC,EAAE,GAAG,QAAQ,CAAC;QACrC,UAAU,CAAC,WAAW,CAAC,SAAS,GAAG,KAAK,CAAC;QAEzC,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC;QACrD,aAAa,CAAC,EAAE,GAAG,aAAa;QAEhC,MAAM,YAAY,GAAgB,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAChE,YAAY,CAAC,SAAS,GAAG,mBAAmB,CAAC;QAC7C,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC;QAC/B,YAAY,CAAC,WAAW,CAAC,QAAQ,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;QAEtD,UAAU,CAAC,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;QAClD,UAAU,CAAC,WAAW,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;QACjD,UAAU,CAAC,WAAW,CAAC,WAAW,CAAC,UAAU,CAAC,KAAK,EAAE,CAAC,CAAC;QACvD,UAAU,CAAC,cAAc,EAAE,CAAC;IAC9B,CAAC;IACM,MAAM,CAAC,MAAM;QAClB,OAAO,UAAU,CAAC,WAAW;IAC/B,CAAC;IAEM,MAAM,CAAC,QAAQ;QACpB,QAAQ,EAAE,aAAa,CAAC,iBAAiB,CAAC,CAAC,WAAW,CAAC,UAAU,CAAC,WAAW,CAAC,CAAC;IACjF,CAAC;IACO,MAAM,CAAC,KAAK;QAClB,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAChD,MAAM,QAAQ,GAAG;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;CA+EpB,CAAC;QAGE,OAAO,CAAC,WAAW,CAAC,UAAU,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;QACrD,OAAO,OAAO,CAAC;IACjB,CAAC;IAEO,MAAM,CAAC,UAAU,CAAC,MAAc;QAEtC,OAAO,QAAQ,CAAC,cAAc,CAAC,MAAM,CAAC,CAAC;IACzC,CAAC;IACM,MAAM,CAAC,KAAK;QACjB,UAAU,CAAC,WAAW,CAAC,MAAM,EAAE,CAAC;IAClC,CAAC;IACD;;;;WAIO;IACA,MAAM,CAAC,GAAG,CAAC,OAAY;QAG5B,UAAU,CAAC,KAAK,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;QAE1C,MAAM,eAAe,GAAgB,UAAU,CAAC,WAAW,EAAE,aAAa,CAAC,aAAa,CAAC,wDAAsD;QAE/I,UAAU,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAC5B,IAAI,eAAe,EAAE;YACnB,UAAU,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;SAE3B;aAAM;YACL,UAAU,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC;SAE9B;QACD,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;QAC3B,eAAe,CAAC,WAAW,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC;QAC5D,UAAU,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;IAE7B,CAAC;CAyBF;;;;;;;;;;;AC9MD;;;;;;;;;;;;;;;;;;;;;;;;;;GA0BG;AACI,MAAM,UAAU;IAEnB,4FAA4F;IAC5F;QACI,8DAA8D;IAClE,CAAC;IACM,MAAM,CAAC,YAAY;QACtB,OAAO,IAAI,CAAC,oCAAmC;IACnD,CAAC;IACM,MAAM,CAAC,qBAAqB;QAC/B,OAAO;YACH,OAAO,EAAE;gBACL,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,UAAU,EAAE;gBACR,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,kBAAkB,EAAE;gBAChB,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,YAAY,EAAE;gBACV,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,YAAY,EAAE;gBACV,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,MAAM,EAAE;gBACJ,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,WAAW,EAAE;gBACT,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,SAAS,EAAE;gBACP,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,aAAa,EAAE;gBACX,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,YAAY,EAAE,IAAI;SACrB;IACL,CAAC;IACM,MAAM,CAAC,4BAA4B;QACtC,OAAO;YAEH,UAAU,EAAE,EAAE;YACd,YAAY,EAAE,CAAC;YACf,MAAM,EAAE,CAAC;YACT,WAAW,EAAE,CAAC;YACd,SAAS,EAAE,CAAC;YACZ,aAAa,EAAE,CAAC;SACnB;IACL,CAAC;CAEJ;AACD,SAAS;;;;;;;;;;;;;AC3FT;;;;;;;;;;;;;;;;;;;;;;;;GAwBG;AAEU;AAE8D;AAE3E,IAAO,sBAAsB,GAAG,sGAAuB,CAAC;AAExD,IAAO,uBAAuB,GAAG,uGAAwB,CAAC;AAE1D;;GAEG;AACH,MAAM,qBAAsB,SAAQ,sBAAsB;IAGtD,eAAe,GAAG,IAAI,6GAA8B,CAAC;QACjD,IAAI,EAAE,iBAAiB;QACvB,WAAW,EAAE,kBAAkB;QAC/B,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;KAC9B,CAAC,CAAC;IAEH,sBAAsB,GAAG,IAAI,6GAA8B,CAAC;QACxD,IAAI,EAAE,wBAAwB;QAC9B,WAAW,EAAE,+BAA+B;QAC5C,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;KAC9B,CAAC,CAAC;IAEH,sBAAsB,GAAG,IAAI,6GAA8B,CAAC;QACxD,IAAI,EAAE,wBAAwB;QAC9B,WAAW,EAAE,0BAA0B;QACvC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;KAC9B,CAAC,CAAC;IACH,2BAA2B,GAAG,IAAI,6GAA8B,CAAC;QAC7D,IAAI,EAAE,6BAA6B;QACnC,WAAW,EAAE,oBAAoB;QACjC,KAAK,EAAE,EAAE,KAAK,EAAE,SAAS,EAAE;KAC9B,CAAC,CAAC;IAEH,aAAa,GAAG,IAAI,2GAA4B,CAAC;QAC7C,WAAW,EAAE,gBAAgB;QAC7B,IAAI,EAAE,eAAe;QACrB,WAAW,EAAE,gBAAgB;QAC7B,KAAK,EAAE,eAAe;KACzB,CAAC,CAAC;IAEH,WAAW,GAAG,IAAI,2GAA4B,CAAC;QAC3C,WAAW,EAAE,cAAc;QAC3B,IAAI,EAAE,aAAa;QACnB,WAAW,EAAE,cAAc;QAC3B,KAAK,EAAE,cAAc;KACxB,CAAC,CAAC;IAKH,kBAAkB,GAAG,IAAI,2GAA4B,CAAC;QAClD,WAAW,EAAE,sBAAsB;QACnC,IAAI,EAAE,oBAAoB;QAC1B,WAAW,EAAE,sBAAsB;QACnC,KAAK,EAAE,eAAe;KACzB,CAAC,CAAC;IAEH,gBAAgB,GAAG,IAAI,2GAA4B,CAAC;QAChD,WAAW,EAAE,oBAAoB;QACjC,IAAI,EAAE,kBAAkB;QACxB,WAAW,EAAE,oBAAoB;QACjC,KAAK,EAAE,oBAAoB;KAC9B,CAAC,CAAC;IAEH,WAAW;IACX,gBAAgB,GAAG,IAAI,2GAA4B,CAAC;QAChD,WAAW,EAAE,oBAAoB;QACjC,IAAI,EAAE,kBAAkB;QACxB,WAAW,EAAE,oBAAoB;QACjC,KAAK,EAAE,oBAAoB;KAC9B,CAAC,CAAC;IAEH,aAAa,GAAG,IAAI,2GAA4B,CAAC;QAC7C,WAAW,EAAE,6BAA6B;QAC1C,IAAI,EAAE,eAAe;QACrB,WAAW,EAAE,6BAA6B;QAC1C,KAAK,EAAE,6BAA6B;KACvC,CAAC,CAAC;IACH,kBAAkB,GAAG,IAAI,2GAA4B,CAAC;QAClD,WAAW,EAAE,mCAAmC;QAChD,IAAI,EAAE,oBAAoB;QAC1B,WAAW,EAAE,mCAAmC;QAChD,KAAK,EAAE,mCAAmC;KAC7C,CAAC,CAAC;IACH,4BAA4B,GAAG,IAAI,2GAA4B,CAAC;QAC5D,WAAW,EAAE,kCAAkC;QAC/C,IAAI,EAAE,8BAA8B;QACpC,WAAW,EAAE,kCAAkC;QAC/C,KAAK,EAAE,kCAAkC;KAC5C,CAAC,CAAC;IAEH,WAAW;IAIX,YAAY,GAAG,IAAI,2GAA4B,CAAC;QAC5C,IAAI,EAAE,cAAc;QACpB,WAAW,EAAE,eAAe;QAC5B,KAAK,EAAE,CAAC;QACR,OAAO,EAAE;YACL,QAAQ,EAAE;gBACN,IAAI,2CAAmC;gBACvC,KAAK,EAAE,CAAC;aACX;YACD,QAAQ,EAAE;gBACN,IAAI,2CAAmC;gBACvC,KAAK,EAAE,CAAC;aACX;SACJ;KAEJ,CAAC,CAAC;IAEH,IAAI,GAAW,cAAc,CAAC;IAC9B,WAAW,GAAW,cAAc,CAAC;IACrC,MAAM,GAAmC;QACrC,IAAI,CAAC,WAAW;QAChB,IAAI,CAAC,gBAAgB;QACrB,IAAI,CAAC,aAAa;QAClB,IAAI,CAAC,kBAAkB;QACvB,IAAI,CAAC,sBAAsB;QAC3B,IAAI,CAAC,2BAA2B;QAChC,IAAI,CAAC,eAAe;QACpB,IAAI,CAAC,YAAY;QACjB,IAAI,CAAC,sBAAsB;QAC3B,IAAI,CAAC,gBAAgB;QACrB,IAAI,CAAC,aAAa;QAClB,IAAI,CAAC,kBAAkB;QACvB,IAAI,CAAC,4BAA4B;KACpC,CAAC;CACL;AAED;;;EAGE;AACK,MAAM,6BAA8B,SAAQ,uBAAuB;IACtE,oDAAoD;IACpD,aAAa,GAAG,IAAI,qBAAqB,EAAE,CAAC;IAE5C,KAAK,GAAG,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC;CAChC;;;;;;;;IAQG;AA8BG,MAAM,yBAAyB;IAEvB;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IACA;IAVX,YACW,SAAiD,IAAI,EACrD,WAAmD,IAAI,EACvD,SAAiD,IAAI,EACrD,WAAmD,IAAI,EACvD,qBAA6D,IAAI,EACjE,qBAA6B,CAAC,EAC9B,kBAA0B,SAAS,EACnC,yBAAiC,SAAS,EAC1C,yBAAiC,SAAS,EAC1C,8BAAsC,SAAS;QAT/C,WAAM,GAAN,MAAM,CAA+C;QACrD,aAAQ,GAAR,QAAQ,CAA+C;QACvD,WAAM,GAAN,MAAM,CAA+C;QACrD,aAAQ,GAAR,QAAQ,CAA+C;QACvD,uBAAkB,GAAlB,kBAAkB,CAA+C;QACjE,uBAAkB,GAAlB,kBAAkB,CAAY;QAC9B,oBAAe,GAAf,eAAe,CAAoB;QACnC,2BAAsB,GAAtB,sBAAsB,CAAoB;QAC1C,2BAAsB,GAAtB,sBAAsB,CAAoB;QAC1C,gCAA2B,GAA3B,2BAA2B,CAAoB;IAE1D,CAAC;IACM,WAAW,CAAC,UAAU;QACzB,MAAM,aAAa,GAA6B;YAC5C,MAAM,EAAE;gBACJ,KAAK,EAAE,UAAU,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK;gBACjD,UAAU,EAAE,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK;aAC9D;YACD,QAAQ,EAAE;gBACN,KAAK,EAAE,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK;gBACnD,UAAU,EAAE,UAAU,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAK;aAChE;YACD,MAAM,EAAE;gBACJ,KAAK,EAAE,IAAI;gBACX,UAAU,EAAE,UAAU,CAAC,aAAa,CAAC,gBAAgB,CAAC,KAAK;aAC9D;YACD,QAAQ,EAAE;gBACN,KAAK,EAAE,UAAU,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK;gBACnD,UAAU,EAAE,UAAU,CAAC,aAAa,CAAC,kBAAkB,CAAC,KAAK;aAChE;YACD,kBAAkB,EAAE;gBAChB,KAAK,EAAE,UAAU,CAAC,aAAa,CAAC,4BAA4B,CAAC,KAAK;gBAClE,UAAU,EAAE,UAAU,CAAC,aAAa,CAAC,4BAA4B,CAAC,KAAK;aAC1E;YACD,kBAAkB,EAAE,UAAU,CAAC,aAAa,CAAC,YAAY,CAAC,KAAK;YAC/D,eAAe,EAAE,UAAU,CAAC,aAAa,CAAC,eAAe,CAAC,KAAK,CAAC,KAAK;YACrE,sBAAsB,EAAE,UAAU,CAAC,aAAa,CAAC,sBAAsB,CAAC,KAAK,CAAC,KAAK;YACnF,sBAAsB,EAAE,UAAU,CAAC,aAAa,CAAC,sBAAsB,CAAC,KAAK,CAAC,KAAK;YACnF,2BAA2B,EAAE,UAAU,CAAC,aAAa,CAAC,2BAA2B,CAAC,KAAK,CAAC,KAAK;SAEhG,CAAC;QAEF,OAAO,aAAa,CAAC;IACzB,CAAC;CACJ;;;;;;;;;;;;;;;AC9PD;;;;;;;;;;;;;;;;;;;;;;;;EAwBE;AACW;AAEmB;AASG;AAEM;AAGyC;AAIvB;AAEsB;AAC1E,MAAM,MAAM;IACf,MAAM,CAAC,MAAM,CAAc;IACnB,WAAW,CAAS;IACpB,QAAQ,CAAO;IACf,cAAc,CAAS;IACvB,aAAa,CAAU;IACvB,KAAK,CAAuB;IAC5B,kBAAkB,CAAgC;IAElD,yBAAyB,CAA4B;IACrD,QAAQ,CAAW;IAE3B,MAAM,CAAC,uBAAuB,GAAG,EAAE,CAAC;IACpC,MAAM,CAAC,UAAU,GAAG;QAChB,MAAM,EAAE,sDAAU,CAAC,qBAAqB,EAAE;QAC1C,QAAQ,EAAE,sDAAU,CAAC,qBAAqB,EAAE;QAC5C,MAAM,EAAE,sDAAU,CAAC,qBAAqB,EAAE;QAC1C,QAAQ,EAAE,sDAAU,CAAC,qBAAqB,EAAE;QAC5C,kBAAkB,EAAE,sDAAU,CAAC,qBAAqB,EAAE;QACtD,UAAU,EAAE,sDAAU,CAAC,qBAAqB,EAAE;QAC9C,YAAY,EAAE,sDAAU,CAAC,qBAAqB,EAAE;QAChD,iBAAiB,EAAE,sDAAU,CAAC,qBAAqB,EAAE;KACxD,CAAC;IAMF,MAAM,CAAC,YAAY,CAA2B;IAC9C,YAAY,OAAiC;QACzC,sDAAsD;QACtD,IAAI,CAAC,yBAAyB,GAAG,IAAI,qGAAyB,EAAE,CAAC;QACjE,MAAM,CAAC,MAAM,GAAG,OAAO,CAAC,OAAO,CAAC;QAChC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAG3B,IAAI,QAAQ,EAAE;YAKV,mDAAmD;YAEnD,MAAM,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACrD,cAAc,CAAC,SAAS,GAAG,gBAAgB,CAAC;YAC5C,cAAc,CAAC,YAAY,CAAC,IAAI,EAAE,gBAAgB,CAAC,CAAC;YACpD,qCAAqC;YAGrC,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;SAI7C;IACL,CAAC;IACM,MAAM,CAAC,cAAc;QACxB,MAAM,KAAK,GAAG,IAAI,KAAK,EAAE,CAAC;QAC1B,MAAM,UAAU,GAAG,KAAK,CAAC,KAAK,EAAE,KAAK,CAAC,IAAI,CAAC,IAAI,EAAE,CAAC;QAElD,oFAAoF;QACpF,MAAM,gBAAgB,GAAG,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,uCAAuC;QAC/E,MAAM,SAAS,GAAG,gBAAgB,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QAEvD,OAAO,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,8BAA8B;IACtF,CAAC;IACM,MAAM,CAAC,MAAM,CAAC,UAAkB,IAAI,EAAE,QAAgB,OAAO,gCAA+B;QAC/F,IAAI,eAAe,GAAgB,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;QACrE,2CAA2C;QAE3C,IAAI,CAAC,eAAe,EAAE;YAClB,MAAM,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACpD,MAAM,YAAY,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YACnD,YAAY,CAAC,EAAE,GAAG,YAAY,CAAC;YAC/B,aAAa,CAAC,EAAE,GAAG,aAAa;YAChC,eAAe,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;YAChD,eAAe,CAAC,SAAS,GAAG,KAAK,CAAC;YAClC,eAAe,CAAC,EAAE,GAAG,QAAQ,CAAC;YAC9B,YAAY,CAAC,SAAS,GAAG,gCAAgC,GAAG,KAAK,GAAG,6DAA6D,GAAG,OAAO,GAAG,mBAAmB,CAAC;YAClK,eAAe,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;YAC3C,eAAe,CAAC,WAAW,CAAC,YAAY,CAAC,CAAC;YAI1C,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,eAAe,CAAC;YAE1C,MAAM,CAAC,kBAAkB,EAAE,CAAC;SAC/B;aAAM;YACH,MAAM,YAAY,GAAG,QAAQ,CAAC,cAAc,CAAC,YAAY,CAAC,CAAC;YAC3D,YAAY,CAAC,SAAS,IAAI,gCAAgC,GAAG,KAAK,GAAG,6DAA6D,GAAG,OAAO,GAAG,mBAAmB,CAAC;YACnK,qGAAqG;YACrG,kCAAkC;SACrC;QAID,IAAI,OAAO,IAAI,IAAI,EAAE;YACjB,iCAAiC;YACjC,IAAI,CAAC,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE;gBAChC,CAAC,CAAC,oBAAoB,CAAC,CAAC,MAAM,EAAE,CAAC;aACpC;SACJ;IAEL,CAAC;IACM,MAAM,CAAC,UAAU,CAAC,OAAe,EAAE,WAAgB,EAAE,WAAmB,EAAE,EAAE,UAAkB,IAAI;QAErG,6DAA6D;QAC7D,MAAM,MAAM,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC/C,2DAA2D;QAC3D,MAAM,CAAC,SAAS,GAAG,WAAW,CAAC;QAE/B,IAAI,QAAQ,IAAI,EAAE,EAAE;YAChB,MAAM,CAAC,SAAS,GAAG,QAAQ,CAAC;SAC/B;QACD,IAAI,OAAO,KAAK,IAAI,EAAE;YAClB,MAAM,CAAC,YAAY,CAAC,SAAS,EAAE,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;SACtD;QAED,sDAAsD;QAEtD,OAAO,MAAM,CAAC;IAGlB,CAAC;IACO,cAAc,CAAC,KAAK,EAAE,SAAiB,IAAI;QAC/C,IAAI,MAAM,KAAK,IAAI,EAAE;YACjB,IAAI,OAAO,KAAK,KAAK,QAAQ,IAAI,KAAK,KAAK,IAAI,IAAI,KAAK,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAC7G,OAAO,IAAI,CAAC;aACf;iBAAM;gBACH,OAAO,KAAK,CAAC;aAChB;SACJ;aAAM;YACH,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;gBAChD,OAAO,KAAK,CAAC;aAChB;iBAAM;gBACH,OAAO,IAAI,CAAC;aACf;SACJ;IAEL,CAAC;IAEO,MAAM,CAAC,UAAU,CAAC,KAAU,EAAE,QAAiB,KAAK,EAAE,eAAoB,EAAE;QAChF,IAAI,KAAK,IAAI,IAAI,IAAI,KAAK,KAAK,IAAI,IAAI,OAAO,KAAK,KAAK,WAAW,EAAE;YACjE,OAAO,YAAY,CAAC;SACvB;aAAM;YACH,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC;SAC5C;IACL,CAAC;IACO,MAAM,CAAC,UAAU,CAAC,MAAY;QAClC,MAAM,GAAG,GAAG,MAAM,CAAC,OAAO,EAAE,CAAC,QAAQ,EAAE,CAAC;QACxC;;YAEI;QACJ,MAAM,KAAK,GAAG,CAAC,MAAM,CAAC,QAAQ,EAAE,GAAG,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;QACjD,MAAM,IAAI,GAAG,MAAM,CAAC,WAAW,EAAE,CAAC;QAClC,OAAO,GAAG,GAAG,IAAI,KAAK,IAAI,IAAI,EAAE,CAAC;IAErC,CAAC;IAEO,MAAM,CAAC,UAAU,CAAC,IAAY,EAAE,OAAe,EAAE,UAAkB;QACvE,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,UAAU,CAAC,CAAC,OAAO,CAAC,aAAa,EAAE,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,EAAE,MAAM,CAAC;IACjH,CAAC;IACO,UAAU,CAAC,KAAK,EAAE,KAAK,EAAE,IAAI;QACjC,OAAO,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,KAAK,KAAK,CAAC;IACzC,CAAC;IACO,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,kBAAkB;QAC5D,OAAO;YACH,OAAO,EAAE,YAAY,CAAC,kBAAkB,CAAC,OAAO,CAAC,QAAQ,CAAC;YAC1D,UAAU,EAAE,YAAY,CAAC,kBAAkB,CAAC,UAAU,CAAC,QAAQ,CAAC;YAChE,kBAAkB,EAAE,YAAY,CAAC,kBAAkB,CAAC,kBAAkB,CAAC,QAAQ,CAAC;YAChF,YAAY,EAAE,YAAY,CAAC,kBAAkB,CAAC,YAAY,CAAC,QAAQ,CAAC;YACpE,YAAY,EAAE,MAAM,CAAC,CAAC,YAAY,CAAC,kBAAkB,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC9E,MAAM,EAAE,MAAM,CAAC,CAAC,YAAY,CAAC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,CAAC;YAClE,WAAW,EAAE,MAAM,CAAC,CAAC,YAAY,CAAC,kBAAkB,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC5E,SAAS,EAAE,MAAM,CAAC,CAAC,YAAY,CAAC,kBAAkB,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACxE,aAAa,EAAE,MAAM,CAAC,CAAC,YAAY,CAAC,kBAAkB,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC,CAAC;SACnF;IACL,CAAC;IACO,aAAa,CAAC,MAAW;QAC7B,gDAAgD;QAChD,MAAM,IAAI,GAAG;YACT,aAAa,EAAE;gBACX,MAAM,EAAE,CAAC,sDAAU,CAAC,qBAAqB,EAAE,CAAC;aAC/C;YACD,MAAM,EAAE,EAAE;YACV,QAAQ,EAAE;gBACN,MAAM,EAAE,EAAE;aACb;YACD,UAAU,EAAE;gBACR,MAAM,EAAE,EAAE;aACb;YACD,QAAQ,EAAE;gBACN,MAAM,EAAE,EAAE;aACb;YACD,UAAU,EAAE;gBACR,MAAM,EAAE,EAAE;aACb;YACD,oBAAoB,EAAE;gBAClB,MAAM,EAAE,EAAE;aACb;YACD,aAAa,EAAE,EAAE;YACjB,UAAU,EAAE,EAAE;SACjB,CAAC;QAEF,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,OAAO,CAAC,CAAC,qBAA0B,EAAE,EAAE;YACpD,MAAM,gBAAgB,GAAG;gBACrB,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,qBAAqB,CAAC,WAAW,CAAC;gBACxD,QAAQ,EAAE,QAAQ,CAAC,qBAAqB,CAAC,KAAK,CAAC;aAClD,CAAC;YACF,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;gBACvD,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,GAAG,gBAAgB,CAAC;aAE3D;iBAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,YAAY,CAAC,EAAE;gBACjE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,GAAG,gBAAgB,CAAC;aAE9D;iBACI,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,oBAAoB,CAAC,EAAE;gBACvE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,gBAAgB,CAAC;aAEtE;iBAEI,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;gBACjE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,gBAAgB,CAAC;aAEhE;iBAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;gBACnE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,gBAAgB,CAAC;aAEhE;iBAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;gBAC7D,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,gBAAgB,CAAC;aAE1D;iBAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;gBAClE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,GAAG,gBAAgB,CAAC;aAE/D;iBAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,WAAW,CAAC,EAAE;gBAChE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,GAAG,gBAAgB,CAAC;aAE7D;iBAAM,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,eAAe,CAAC,EAAE;gBACpE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,gBAAgB,CAAC;aAEjE;iBACI,IAAI,qBAAqB,CAAC,KAAK,CAAC,cAAc,CAAC,cAAc,CAAC,EAAE;gBACjE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,GAAG,gBAAgB,CAAC;aAEhE;QACL,CAAC,CAAC,CAAC;QACH,4DAAU,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;QAErB,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,YAAiB,kBAAiB,EAAE,EAAE;YAEzD,IAAI,WAAW,GAAW,EAAE,CAAC;YAG7B,IAAI,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,QAAQ,CAAC,KAAK,IAAI,EAAE;gBACzE,WAAW,GAAG,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;gBAC1E,MAAM,SAAS,GAAG,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBACrF,IAAI,CAAC,SAAS,CAAC,UAAU,KAAK,wBAAwB,CAAC,IAAI,CAAC,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,eAAe,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,cAAc,CAAC,CAAC,WAAW,EAAE,CAAC,IAAI,CAAC,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,kBAAkB,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,EAAE;oBAG3T,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,UAAU,CAAC,KAAK,GAAG,cAAc,CAAC;oBAC/D,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,YAAY,CAAC,CAAC;oBAC3I,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC;oBACzH,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC;oBACxI,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC;oBAClI,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,SAAS,CAAC,aAAa,CAAC,CAAC;iBAGjJ;gBACD,gCAAgC;gBAChC,IAAI,WAAW,IAAI,kBAAkB,EAAE;oBACnC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAEtC;qBAAM,IAAI,WAAW,IAAI,oBAAoB,EAAE;oBAC5C,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBAGxC;qBAAM,IAAI,WAAW,IAAI,wBAAwB,EAAE;oBAChD,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;iBACxC;aACJ;YAED,IAAI,IAAI,CAAC,WAAW,IAAI,EAAE,EAAE;gBACxB,IAAI,CAAC,WAAW,GAAG,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,SAAS,CAAC,CAAC;gBACvH,IAAI,CAAC,QAAQ,GAAG,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,QAAQ,CAAC,EAAE,MAAM,CAAC,CAAC;gBACjH,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC5I,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBACtJ,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAC1I,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBACpJ,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,SAAS,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;gBAChJ,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,aAAa,CAAC,KAAK,EAAE,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,WAAW,CAAC,CAAC;aAE3J;QAEL,CAAC,CAAC,CAAC;QAEH,OAAO,IAAI,CAAC;IAEhB,CAAC;IACO,MAAM,CAAC,SAAS,CAAC,KAAuB;QAC5C,OAAO,CAAC,CAAC,KAAK,IAAI,IAAI,CAAC;YACnB,CAAC,KAAK,KAAK,EAAE,CAAC;YACd,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,QAAQ,EAAE,CAAC,CAAC,CAAC,CAAC;IAC1C,CAAC;IACO,MAAM,CAAC,eAAe,CAAC,MAAc,EAAE,OAAe,SAAS;QAEnE,MAAM,IAAI,GAAG,CAAC,IAAI,IAAI,SAAS,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC;QAC/C,OAAO,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,KAAK,EAAE,OAAO,EAAE,CAAC,GAAG,GAAG,GAAG,CAAC,QAAQ,CAAC,CAAC,IAAI,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,cAAc,CAAC,SAAS,EAAE,EAAE,IAAI,EAAE,SAAS,EAAE,CAAC,CAAC,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;IACjN,CAAC;IACD,MAAM,CAAC,iBAAiB,CAAC,KAAU,EAAE,SAAc,IAAI,EAAE,UAAmB,IAAI;QAC5E,KAAK,GAAG,MAAM,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,kBAAkB,CAAC,KAAK,EAAE,KAAK,EAAE,KAAK,EAAE,OAAO,CAAC,CAAC,CAAC,CAAC,KAAK;QAEjG,IAAI,MAAM,KAAK,IAAI,EAAE;YACjB,IAAI,MAAM,IAAI,GAAG,IAAI,MAAM,IAAI,IAAI,IAAI,MAAM,IAAI,KAAK,IAAI,MAAM,IAAI,IAAI,EAAE;gBACtE,OAAO,WAAW,GAAG,MAAM,GAAG,MAAM,GAAG,CAAC,CAAC,KAAK,GAAG,EAAE,CAAC,IAAI,IAAI,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,SAAS,CAAC;aAC3F;iBAAM,IAAI,MAAM,IAAI,GAAG,EAAE;gBACtB,OAAO,QAAQ,GAAG,CAAC,CAAC,KAAK,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,UAAU,CAAC;aAC/E;SACJ;aAAM;YACH,OAAO,QAAQ,GAAG,KAAK,GAAG,SAAS,CAAC;SACvC;IACL,CAAC;IACO,MAAM,CAAC,WAAW,CAAC,GAAG;QAC1B,OAAO,GAAG,CAAC,OAAO,CAAC,QAAQ,EAAE,UAAU,GAAG;YACtC,OAAO,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,CAAC;QACrE,CAAC,CAAC,CAAC;QACH,CAAC;IACL,CAAC;IACO,MAAM,CAAC,iBAAiB,CAAC,UAAU,EAAE,WAAmB,IAAI;QAChE,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAGjD,IAAI,QAAQ,KAAK,iBAAiB,EAAE;YAChC,IAAI,QAAQ,IAAI,IAAI,EAAE;gBAClB,WAAW,CAAC,SAAS,GAAG,QAAQ,GAAG,GAAG,GAAG,MAAM,CAAC,uBAAuB,CAAC;gBACxE,WAAW,CAAC,YAAY,CAAC,eAAe,EAAE,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;aACrF;YACD,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;SAClH;aAEI,IAAI,QAAQ,KAAK,qBAAqB,EAAE;YACzC,IAAI,QAAQ,IAAI,IAAI,EAAE;gBAClB,WAAW,CAAC,SAAS,GAAG,QAAQ,GAAG,GAAG,GAAG,MAAM,CAAC,uBAAuB,CAAC;gBACxE,WAAW,CAAC,YAAY,CAAC,mBAAmB,EAAE,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,kBAAkB,CAAC,CAAC,CAAC;aACjG;YACD,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,kBAAkB,CAAC,EAAE,WAAW,CAAC,CAAC,CAAC;SAE1H;aACI;YAED,WAAW,CAAC,SAAS,GAAG,QAAQ,GAAG,UAAU,GAAG,MAAM,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC;YACvF,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,YAAY,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;SACrH;QAGD,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;QACvH,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;QACjH,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;QACtH,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;QACpH,MAAM,eAAe,GAAG,MAAM,CAAC,iBAAiB,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,EAAE,KAAK,CAAC;QACtK,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,CAAC,eAAe,IAAI,iBAAiB,CAAC,CAAC,CAAC,eAAe,CAAC,CAAC,CAAC,eAAe,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;QAC3I,OAAO,WAAW,CAAC;IACvB,CAAC;IACO,MAAM,CAAC,QAAQ,CAAC,GAAG;QACvB,MAAM,EAAE,GAAG,cAAc,CAAC,CAAC,+DAA+D;QAC1F,MAAM,GAAG,GAAG,UAAU,CAAC,CAAK,yCAAyC;QACrE,GAAG,GAAG,GAAG,CAAC,OAAO,CAAC,EAAE,EAAE,GAAG,CAAC,CAAC,CAAE,yBAAyB;QACtD,OAAO,GAAG,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC,gDAAgD;IAC/F,CAAC;IACO,MAAM,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG;QACtC,OAAO,CAAC,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;IAC1D,CAAC;IACO,MAAM,CAAC,gBAAgB,CAAC,IAAI;QAChC,IAAI,UAAU,GAAQ,EAAE,CAAC;QACzB,QAAQ,IAAI,EAAE;YACV,KAAK,QAAQ;gBACT,UAAU,GAAG,QAAQ,CAAC;gBACtB,MAAM;YACV,KAAK,oBAAoB;gBACrB,UAAU,GAAG,oBAAoB,CAAC;gBAClC,MAAM;YACV,KAAK,cAAc;gBACf,UAAU,GAAG,cAAc,CAAC;gBAC5B,MAAM;YACV,KAAK,mBAAmB;gBACpB,UAAU,GAAG,mBAAmB,CAAC;gBACjC,MAAM;YACV;gBACI,UAAU,GAAG,IAAI;gBACjB,MAAM;SACb;QACD,OAAO,UAAU,CAAC;IACtB,CAAC;IACD;;;;;;;;;OASG;IACH;;;;;;;;;;;OAWG;IACK,MAAM,CAAC,sBAAsB;QAGjC,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC5E,MAAM,eAAe,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,CAAC;QAEjF,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QACpE,MAAM,aAAa,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAG1E,MAAM,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC9E,MAAM,kBAAkB,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAKpF,MAAM,YAAY,GAAG,CAAC,CAAC,CAAC,kBAAkB,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,kBAAkB,GAAG,kBAAkB,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC;QACzG,MAAM,MAAM,GAAG,CAAC,CAAC,aAAa,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,aAAa,GAAG,aAAa,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;QACnF,MAAM,MAAM,GAAG,YAAY,GAAG,MAAM;QACpC,MAAM,UAAU,GAAG,CAAC,MAAM,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;QACxD,OAAO;YACH,OAAO,EAAE;gBACL,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,UAAU,EAAE;gBACR,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,kBAAkB,EAAE;gBAChB,KAAK,EAAE,EAAE;gBACT,QAAQ,EAAE,CAAC;aACd;YACD,YAAY,EAAE;gBACV,KAAK,EAAE,CAAC,CAAC,eAAe,GAAG,eAAe,CAAC,GAAG,GAAG,CAAC;gBAClD,QAAQ,EAAE,CAAC;aACd;YACD,MAAM,EAAE;gBACJ,KAAK,EAAE,MAAM;gBACb,QAAQ,EAAE,CAAC;aACd;YACD,WAAW,EAAE;gBACT,KAAK,EAAE,YAAY;gBACnB,QAAQ,EAAE,CAAC;aACd;YACD,SAAS,EAAE;gBACP,KAAK,EAAE,MAAM;gBACb,QAAQ,EAAE,CAAC;aACd;YACD,aAAa,EAAE;gBACX,KAAK,EAAE,UAAU;gBACjB,QAAQ,EAAE,CAAC;aACd;SACJ;IACL,CAAC;IAEO,MAAM,CAAC,eAAe,CAAC,YAAiB,IAAI;QAEhD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,EAAE,CAAC;QACnD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,CAAC;QACpD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,CAAC,CAAC;QAC9C,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,KAAK,GAAG,CAAC,CAAC;QACnD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC;QACjD,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,CAAC;IACzD,CAAC;IACO,MAAM,CAAC,YAAY,CAAC,YAAiB,IAAI,EAAE,iBAAsB,IAAI;QAKzE,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,UAAU,CAAC,KAAK,GAAG,cAAc,CAAC,UAAU,CAAC;QAC1E,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,YAAY,CAAC,KAAK,GAAG,cAAc,CAAC,YAAY,CAAC;QAC9E,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,MAAM,CAAC,KAAK,GAAG,cAAc,CAAC,MAAM,CAAC;QAClE,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,WAAW,CAAC,KAAK,GAAG,cAAc,CAAC,WAAW,CAAC;QAC5E,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,SAAS,CAAC,KAAK,GAAG,cAAc,CAAC,SAAS,CAAC;QACxE,MAAM,CAAC,UAAU,CAAC,SAAS,CAAC,CAAC,aAAa,CAAC,KAAK,GAAG,cAAc,CAAC,aAAa,CAAC;IACpF,CAAC;IACO,MAAM,CAAC,gBAAgB,CAAC,WAAgB,IAAI,EAAE,iBAAsB,IAAI;QAC5E,IAAI,QAAQ,KAAK,IAAI,IAAI,cAAc,KAAK,IAAI,EAAE;YAC9C,IAAI,QAAQ,KAAK,QAAQ,EAAE;gBACvB,cAAc,CAAC,UAAU,GAAG,kBAAkB,CAAC;gBAC/C,MAAM,CAAC,YAAY,CAAC,QAAQ,EAAE,cAAc,CAAC,CAAC;aACjD;iBAAM,IAAI,QAAQ,KAAK,UAAU,EAAE;gBAChC,cAAc,CAAC,UAAU,GAAG,oBAAoB,CAAC;gBACjD,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;gBAChD,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,KAAK,GAAG,kBAAkB,CAAC;gBAC/D,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC;gBAC1I,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;gBACxH,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;gBACvI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;gBACjI,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;aAEhJ;iBAAM,IAAI,QAAQ,KAAK,UAAU,EAAE;gBAChC,cAAc,CAAC,UAAU,GAAG,wBAAwB,CAAC;gBACrD,MAAM,CAAC,YAAY,CAAC,UAAU,EAAE,cAAc,CAAC,CAAC;gBAChD,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,UAAU,CAAC,KAAK,GAAG,sBAAsB,CAAC;gBAC/E,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,YAAY,CAAC,KAAK,CAAC;gBACtJ,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,MAAM,CAAC,KAAK,CAAC;gBACpI,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,WAAW,CAAC,KAAK,CAAC;gBACnJ,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,SAAS,CAAC,KAAK,CAAC;gBAC7I,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC;aAC5J;SACJ;IACL,CAAC;IACO,MAAM,CAAC,gBAAgB,CAAC,SAAc,IAAI,EAAE,aAAkB,IAAI;QACtE,IAAI,MAAM,KAAK,IAAI,EAAE;YACjB,OAAO;gBACH,OAAO,EAAE,EAAE;gBACX,UAAU,EAAE,EAAE;gBACd,kBAAkB,EAAE,EAAE;gBACtB,YAAY,EAAE,CAAC;gBACf,MAAM,EAAE,CAAC;gBACT,WAAW,EAAE,CAAC;gBACd,SAAS,EAAE,CAAC;gBACZ,aAAa,EAAE,CAAC;aACnB;SACJ;aAAM;YACH,IAAI,UAAU,KAAK,IAAI,EAAE;gBACrB,OAAO;oBACH,OAAO,EAAE,MAAM,CAAC,OAAO;oBACvB,UAAU,EAAE,MAAM,CAAC,UAAU;oBAC7B,kBAAkB,EAAE,MAAM,CAAC,kBAAkB;oBAC7C,YAAY,EAAE,MAAM,CAAC,YAAY;oBACjC,MAAM,EAAE,MAAM,CAAC,MAAM;oBACrB,WAAW,EAAE,MAAM,CAAC,WAAW;oBAC/B,SAAS,EAAE,MAAM,CAAC,SAAS;oBAC3B,aAAa,EAAE,MAAM,CAAC,aAAa;iBACtC;aACJ;iBAAM;gBACH,OAAO;oBACH,OAAO,EAAE,MAAM,CAAC,OAAO;oBACvB,UAAU,EAAE,MAAM,CAAC,UAAU;oBAC7B,kBAAkB,EAAE,MAAM,CAAC,kBAAkB;oBAC7C,YAAY,EAAE,MAAM,CAAC,YAAY,GAAG,UAAU,CAAC,YAAY;oBAC3D,MAAM,EAAE,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC,MAAM;oBACzC,WAAW,EAAE,MAAM,CAAC,WAAW,GAAG,UAAU,CAAC,WAAW;oBACxD,SAAS,EAAE,MAAM,CAAC,SAAS,GAAG,UAAU,CAAC,SAAS;oBAClD,aAAa,EAAE,MAAM,CAAC,aAAa,GAAG,UAAU,CAAC,aAAa;iBACjE;aACJ;SAEJ;IACL,CAAC;IACO,MAAM,CAAC,aAAa,CAAC,sBAA2B,IAAI,EAAE,YAAoB,EAAE,EAAE,WAAmB,GAAG;QAExG,MAAM,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QAC7C,OAAO,CAAC,SAAS,GAAG,SAAS,CAAC;QAC9B,IAAI,mBAAmB,KAAK,IAAI,EAAE;YAE9B,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,UAAU,CAAC,KAAK,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC;YAC/H,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,YAAY,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YACvI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,MAAM,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YACjI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,WAAW,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YACtI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,SAAS,CAAC,KAAK,EAAE,QAAQ,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;YACpI,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,mBAAmB,CAAC,aAAa,CAAC,KAAK,EAAE,QAAQ,EAAE,KAAK,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;SAClJ;QACD,OAAO,OAAO,CAAC;IACnB,CAAC;IAEO,MAAM,CAAC,wBAAwB,CAAC,OAAe,IAAI,EAAE,OAAY,IAAI,EAAE,UAAe,IAAI,kDAAiD;QAC/I,IAAI,OAAO,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC9C,IAAI,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAClD,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI,QAAQ,GAAG,QAAQ,CAAC,aAAa,CAAC,OAAO,CAAC,CAAC;QAC/C,IAAI,OAAO,GAAgB,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;QACxD,OAAO,CAAC,SAAS,GAAG,2BAA2B;QAG/C,OAAO,CAAC,SAAS,GAAG,6BAA6B,GAAG,IAAI,CAAC;QACzD,IAAI,IAAI,IAAI,QAAQ,IAAI,IAAI,IAAI,oBAAoB,IAAI,IAAI,IAAI,cAAc,IAAI,IAAI,IAAI,mBAAmB,EAAE;YAC3G,IAAI,UAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC,IAAI,CAAC,CAAC,OAAM;YACrD,IAAI,eAAe,GAAG,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAC7L,IAAI,mBAAmB,KAAK,IAAI,EAAE;gBAC9B,IAAI,iBAAiB,GAAG,MAAM,CAAC,sBAAsB,EAAE,CAAC;gBACxD,iBAAiB,CAAC,UAAU,GAAG,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,UAAU,CAAC,KAAK,CAAC;gBAC9E,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,EAAE,2BAA2B,EAAE,GAAG,CAAC,CAAC,CAAC;aAEtG;iBAAM;gBACH,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,aAAa,CAAC,KAAK,GAAG,eAAe,CAAC;gBACpE,WAAW,CAAC,WAAW,CAAC,MAAM,CAAC,aAAa,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,EAAE,2BAA2B,EAAE,GAAG,CAAC,CAAC,CAAC;aAClH;YACD,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;SAC/B;aAAM;YAEH,IAAI,YAAY,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC,CAAC,oBAAoB;YAClE,IAAI,eAAe,GAAW,EAAE,CAAC;YACjC,IAAI,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;YACjD,IAAI,OAAO,KAAK,IAAI,EAAE;gBAClB,OAAO,CAAC,SAAS,GAAG,WAAW,CAAC;gBAChC,IAAI,IAAI,KAAK,SAAS,EAAE;oBACpB,OAAO,CAAC,SAAS,GAAG,SAAS;iBAChC;gBACD,KAAK,IAAI,GAAG,IAAI,OAAO,EAAE;oBACrB,IAAI,SAAS,KAAK,IAAI,EAAE;wBACpB,IAAI,cAAc,IAAI,GAAG,IAAI,YAAY,IAAI,GAAG,IAAI,cAAc,IAAI,GAAG,EAAE;4BACvE,MAAM,KAAK,GAAG,CAAC,CAAC,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,CAAC;4BACjE,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;yBACvD;qBACJ;iBAEJ;gBAED,WAAW,CAAC,WAAW,CAAC,OAAO,CAAC,CAAC;gBACjC,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;aAC/B;iBACI;gBACD,OAAO,CAAC,SAAS,GAAG,4BAA4B,CAAC;gBAEjD,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;oBACzC,IAAI,aAAa,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBACjD,aAAa,CAAC,SAAS,GAAG,2BAA2B,CAAC;oBACtD,aAAa,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,CAAC,EAAE,gBAAgB,EAAE,CAAC,CAAC,CAAC,CAAC;oBACnI,WAAW,CAAC,WAAW,CAAC,aAAa,CAAC,CAAC;iBAE1C;gBAGD,IAAI,IAAI,EAAE;oBACN,IAAI,UAAU,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;oBAC3C,IAAI,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;oBAC9C,IAAI,kBAAkB,GAAG,EAAE,CAAC;oBAC5B,IAAI,mBAAmB,GAAG,EAAE,CAAC;oBAC7B,IAAI,YAAY,GAAG,EAAE,CAAC;oBACtB,CAAC,IAAI,CAAC,CAAC,OAAO,CAAC,CAAC,KAAU,EAAE,EAAE;wBAE1B,IAAI,kBAAkB,IAAI,EAAE,EAAE;4BAC1B,kBAAkB,GAAG,KAAK,CAAC,kBAAkB;4BAC7C,mBAAmB,GAAG,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC;4BACxF,YAAY,GAAG,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC;yBACrF;wBACD,IAAI,kBAAkB,KAAK,KAAK,CAAC,kBAAkB,EAAE;4BACjD,mBAAmB,GAAG,eAAe,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC;4BACxF,YAAY,GAAG,gBAAgB,GAAG,MAAM,CAAC,QAAQ,CAAC,KAAK,CAAC,kBAAkB,CAAC,GAAG,GAAG,CAAC;4BAClF,kBAAkB,GAAG,KAAK,CAAC,kBAAkB,CAAC;4BAC9C,UAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;yBAC/C;6BAAM;4BACH,UAAU,GAAG,MAAM,CAAC,gBAAgB,CAAC,UAAU,EAAE,KAAK,CAAC,CAAC;yBAC3D;wBAED,IAAI,eAAe,IAAI,KAAK,CAAC,UAAU,EAAE;4BACrC,IAAI,eAAe,IAAI,EAAE,EAAE;gCACvB,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC,CAAC;gCACpF,QAAQ,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC;gCAC1C,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;gCAC3B,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;gCAC/D,YAAY,GAAG,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,gBAAgB,CAAC;gCACtE,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,EAAE,CAAC;6BAChD;4BACD,SAAS,GAAG,QAAQ,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;yBAC7C;wBACD,gBAAgB,CAAC,UAAU,GAAG,KAAK,CAAC,UAAU,CAAC;wBAC/C,gBAAgB,GAAG,MAAM,CAAC,gBAAgB,CAAC,gBAAgB,EAAE,KAAK,CAAC,CAAC;wBACpE,SAAS,CAAC,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,KAAK,EAAE,eAAe,GAAG,mBAAmB,GAAG,GAAG,GAAG,YAAY,CAAC,CAAC,CAAC;wBACnH,eAAe,GAAG,KAAK,CAAC,UAAU,CAAC;wBACnC,mBAAmB,GAAG,EAAE;oBAC5B,CAAC,CAAC,CAAC;oBACH,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;oBAC/D,YAAY,GAAG,MAAM,CAAC,gBAAgB,CAAC,YAAY,EAAE,gBAAgB,CAAC,CAAC;oBACvE,QAAQ,CAAC,WAAW,CAAC,MAAM,CAAC,iBAAiB,CAAC,gBAAgB,EAAE,iBAAiB,CAAC,CAAC,CAAC;oBACpF,QAAQ,CAAC,SAAS,IAAI,SAAS,CAAC,SAAS,CAAC;oBAC1C,SAAS,CAAC,SAAS,GAAG,IAAI,CAAC;iBAC9B;gBAED,2BAA2B;gBAC3B,IAAI,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,KAAK,IAAI,IAAI,EAAE;oBACzC,IAAI,cAAc,GAAG,QAAQ,CAAC,aAAa,CAAC,IAAI,CAAC,CAAC;oBAClD,cAAc,CAAC,SAAS,GAAG,2BAA2B,CAAC;oBACvD,qEAAqE;oBACrE,YAAY,CAAC,UAAU,GAAG,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC;oBAC/D,YAAY,CAAC,aAAa,GAAG,CAAC,CAAC,CAAC,YAAY,CAAC,WAAW,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,YAAY,CAAC,MAAM,CAAC,GAAG,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;oBACzH,qFAAqF;oBACrF,6FAA6F;oBAE7F,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,EAAE,gBAAgB,CAAC,CAAC,CAAC;oBACtI,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,YAAY,CAAC,YAAY,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;oBAC5H,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,YAAY,CAAC,MAAM,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;oBACtH,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,YAAY,CAAC,WAAW,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;oBAC3H,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,YAAY,CAAC,SAAS,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;oBACzH,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,UAAU,CAAC,IAAI,EAAE,MAAM,CAAC,iBAAiB,CAAC,YAAY,CAAC,aAAa,EAAE,GAAG,EAAE,KAAK,CAAC,EAAE,YAAY,CAAC,CAAC,CAAC;oBAEpI,yCAAyC;oBACzC,MAAM,CAAC,gBAAgB,CAAC,IAAI,EAAE,YAAY,CAAC,CAAC;iBAE/C;gBACD,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,CAAC;gBAC5B,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBACzB,OAAO,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAGzB;;;;;;;;;;GAUb;aAEU;SACJ;QAMD,OAAO,OAAO,CAAC;IAEnB,CAAC;IACO,MAAM,CAAC,aAAa,CAAC,MAAW;QAEpC,OAAO;YACH,OAAO,EAAE,MAAM,CAAC,OAAO,CAAC,KAAK;YAC7B,UAAU,EAAE,MAAM,CAAC,UAAU,CAAC,KAAK;YAEnC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,KAAK;YACvC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,KAAK;YACvC,MAAM,EAAE,MAAM,CAAC,MAAM,CAAC,KAAK;YAC3B,WAAW,EAAE,MAAM,CAAC,WAAW,CAAC,KAAK;YACrC,SAAS,EAAE,MAAM,CAAC,SAAS,CAAC,KAAK;YACjC,aAAa,EAAE,MAAM,CAAC,aAAa,CAAC,KAAK;SAC5C;IACL,CAAC;IACM,aAAa;QAGhB,MAAM,cAAc,GAAG,QAAQ,CAAC,cAAc,CAAC,gBAAgB,CAAC,CAAC;QACjE,cAAc,CAAC,SAAS,GAAG,EAAE,CAAC;QAG9B,IAAI,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,KAAK,CAAC;QACvC,IAAI,QAAQ,GAAG,IAAI,CAAC,aAAa,CAAC,YAAY,CAAC,CAAC;QAGhD,IAAI,OAAO,GAAQ,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC;QAC1C,MAAM,YAAY,GAAQ,IAAI,IAAI,EAAE,CAAC;QACrC,MAAM,CAAC,uBAAuB,GAAG,cAAc,GAAG,IAAI,CAAC,GAAG,CAAC,OAAO,GAAG,YAAY,CAAC,GAAG,MAAM,CAAC,kBAAkB,CAAC,GAAG,EAAE,GAAG,CAAC,CAAC;QAKzH,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,SAAS,EAAE,IAAI,EAAE,MAAM,CAAC,aAAa,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEpI,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAG7F,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEjG,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,QAAQ,EAAE,QAAQ,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC;QAE7F,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,UAAU,EAAE,QAAQ,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;QAEjG,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,oBAAoB,CAAC,CAAC;QAEjF,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,UAAU,CAAC,KAAK,GAAG,cAAc,CAAC;QACjE,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,YAAY,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,YAAY,CAAC,KAAK,CAAC,CAAC;QAC9K,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,MAAM,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,MAAM,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC;QAC5J,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,WAAW,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QAC3K,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,SAAS,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QACrK,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,kBAAkB,CAAC,aAAa,CAAC,KAAK,CAAC,GAAG,MAAM,CAAC,MAAM,CAAC,UAAU,CAAC,UAAU,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC;QAGjL,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,cAAc,CAAC,CAAC;QAI3E,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,UAAU,CAAC,KAAK,GAAG,YAAY,CAAC;QACpE,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,YAAY,CAAC,KAAK,GAAG,CAAC,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC,GAAG,UAAU,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,YAAY,CAAC,KAAK,GAAG,EAAE,CAAC,CAAC;QAC5L,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,YAAY,CAAC,WAAW,CAAC,KAAK,GAAG,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,WAAW,CAAC,KAAK,CAAC;QACtJ,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,8FAA4F;QACnJ,MAAM,CAAC,UAAU,CAAC,iBAAiB,CAAC,aAAa,CAAC,KAAK,GAAG,CAAC,sGAAoG;QAG/J,cAAc,CAAC,WAAW,CAAC,MAAM,CAAC,wBAAwB,CAAC,mBAAmB,CAAC,CAAC;QAGhF,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACnC,MAAM,CAAC,eAAe,CAAC,QAAQ,CAAC,CAAC;QACjC,MAAM,CAAC,eAAe,CAAC,UAAU,CAAC,CAAC;QACnC,MAAM,CAAC,eAAe,CAAC,oBAAoB,CAAC,CAAC;QAC7C,MAAM,CAAC,eAAe,CAAC,YAAY,CAAC,CAAC;QACrC,MAAM,CAAC,eAAe,CAAC,cAAc,CAAC,CAAC;QACvC,MAAM,CAAC,eAAe,CAAC,mBAAmB,CAAC,CAAC;QAE5C,MAAM,CAAC,MAAM,CAAC,WAAW,CAAC,cAAc,CAAC,CAAC;QAC1C,yBAAyB;IAC7B,CAAC;IAEM,MAAM,CAAC,OAA4B;QAGtC,IAAI,CAAC,kBAAkB,GAAG,IAAI,CAAC,yBAAyB,CAAC,+BAA+B,CAAC,6EAA6B,EAAE,OAAO,CAAC,SAAS,CAAC,CAAC;QAE3I,IAAI,MAAM,CAAC,MAAM,EAAE;YAEf,MAAM,CAAC,YAAY,GAAG,IAAI,yEAAyB,EAAE,CAAC,WAAW,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;YAE3F,IAAI,CAAC,QAAQ,GAAG,OAAO,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC;YAKrC,eAAe;YAEf,IAAI,CAAC,aAAa,EAAE,CAAC;YACrB,IAAI,OAAO,GAAW,CAAC,CAAC,iBAAiB,CAAC,CAAC,MAAM,EAAE,CAAC;YACpD,yCAAyC;YACzC,OAAO,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;YAC/D,OAAO,CAAC,IAAI,CAAC,gEAAgE,CAAC,CAAC,GAAG,CAAC,kBAAkB,EAAE,MAAM,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;YACnJ,OAAO,CAAC,IAAI,CAAC,gEAAgE,CAAC,CAAC,GAAG,CAAC,OAAO,EAAE,MAAM,CAAC,YAAY,CAAC,2BAA2B,CAAC,CAAC;YAE7I,OAAO,CAAC,IAAI,CAAC,0BAA0B,CAAC,CAAC,GAAG,CAAC,cAAc,EAAE,MAAM,CAAC,YAAY,CAAC,eAAe,CAAC,CAAC;YAClG,OAAO,CAAC,IAAI,CAAC,8EAA8E,CAAC,CAAC,GAAG,CAAC,YAAY,EAAE,MAAM,CAAC,YAAY,CAAC,sBAAsB,CAAC,CAAC;YAE3J,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,OAAO,EAAE,GAAG,GAAG,MAAM,CAAC,uBAAuB,EAAE;gBAGxD,IAAI,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC;gBAC1B,IAAI,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,WAAW,CAAC,IAAI,CAAC,UAAU,CAAC,CAAC,CAAC;gBACvD,8BAA8B;gBAC9B,IAAI,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE;oBAChC,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;oBAC1C,WAAW,CAAC,WAAW,CAAC,QAAQ,CAAC;iBACpC;qBAAM;oBACH,CAAC,CAAC,KAAK,GAAG,WAAW,CAAC,CAAC,WAAW,CAAC,QAAQ,CAAC,CAAC;oBAC7C,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC;iBACjC;YAGL,CAAC,CAAC,CAAC;YACH,iCAAiC;YACjC;;;;;;;sCAO0B;YAE1B;;;;;;;;;;;;;gBAaI;YAEJ,oBAAoB;SACvB;IAEL,CAAC;IACM,MAAM,CAAC,kBAAkB;QAC5B,OAAO,CAAC,GAAG,CAAC,qBAAqB,CAAC,CAAC;QACnC,IAAI,WAAW,GAAG,QAAQ,CAAC,cAAc,CAAC,aAAa,CAAC,CAAC;QAEzD,IAAI,WAAW,EAAE;YACb,WAAW,CAAC,gBAAgB,CAAC,OAAO,EAAE,UAAU,KAAK;gBACjD,OAAO,CAAC,GAAG,CAAC,aAAa,CAAC,CAAC;gBAE3B,IAAI,UAAU,GAAG,QAAQ,CAAC,cAAc,CAAC,QAAQ,CAAC,CAAC;gBAEnD,IAAI,UAAU,CAAC,SAAS,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;oBAEvC,UAAU,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC;iBACtC;qBAAM;oBAEH,UAAU,CAAC,SAAS,CAAC,GAAG,CAAC,MAAM,CAAC;iBACnC;gBACD;;;;;;;;;;;mBAWG;YACP,CAAC,CAAC,CAAC;SACN;IACL,CAAC;IACO,MAAM,CAAC,kBAAkB,CAAC,QAAa,EAAE,YAAiB,KAAK,EAAE,kBAAuB,KAAK,EAAE,UAAmB,IAAI;QAE1H,IAAI,MAAM,GAAG,CAAC,QAAQ,CAAC,CAAC;QACxB,IAAI,QAAQ,GAAG,MAAM,CAAC,MAAM,CAAC,YAAY,CAAC,kBAAkB,CAAC,CAAC;QAC9D,IAAI,MAAM,IAAI,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,EAAE;YACrC,MAAM,IAAI,SAAS,CAAC,qBAAqB,CAAC,CAAC;SAC9C;QAED,IAAI,CAAC,QAAQ,EAAE;YACX,IAAI,GAAG,GAAG,MAAM,CAAC,QAAQ,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YAC9C,QAAQ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;SAChC;QAED,IAAI,CAAC,SAAS,EAAE;YACZ,SAAS,GAAG,GAAG,CAAC;SACnB;QAED,IAAI,CAAC,eAAe,EAAE;YAClB,eAAe,GAAG,GAAG,CAAC;SACzB;QACD,IAAI,OAAO,EAAE;YACT,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAE1C;aAAM;YACH,MAAM,GAAG,UAAU,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;SAE1C;QAED,MAAM,GAAG,MAAM,CAAC,OAAO,CAAC,GAAG,EAAE,SAAS,CAAC,CAAC;QAExC,IAAI,QAAQ,GAAG,MAAM,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QACvC,QAAQ,CAAC,CAAC,CAAC,GAAG,QAAQ,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,uBAAuB,EAAE,eAAe,CAAC,CAAC;QAC5E,MAAM,GAAG,QAAQ,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;QAElC,IAAI,QAAQ,GAAG,CAAC,CAAC,UAAU,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,GAAG,EAAE,EAAE,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,OAAO,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC,CAAC;QAE/G,OAAO,CAAC,QAAQ,KAAK,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,QAAQ,CAAC;IAC/C,CAAC;IACO,MAAM,CAAC,WAAW,CAAC,MAAW,EAAE,eAAuB,CAAC,EAAE,UAAkB,GAAG,EAAE,YAAoB,GAAG;QAC5G,IAAI;YACA,YAAY,GAAG,IAAI,CAAC,GAAG,CAAC,YAAY,CAAC,CAAC;YACtC,YAAY,GAAG,KAAK,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,YAAY,CAAC;YAEtD,MAAM,YAAY,GAAG,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,EAAE,CAAC;YAE3C,MAAM,CAAC,GAAQ,QAAQ,CAAC,MAAM,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,CAAC,QAAQ,EAAE,CAAC;YACjG,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5C,OAAO,YAAY;gBACf,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,CAAC,CAAC,EAAE,CAAC,CAAC,GAAG,SAAS,CAAC,CAAC,CAAC,EAAE,CAAC;gBACrC,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,gBAAgB,EAAE,IAAI,GAAG,SAAS,CAAC;gBACvD,CAAC,YAAY,CAAC,CAAC,CAAC,OAAO,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,OAAO,CAAC,YAAY,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC,CAAC;SAC3F;QAAC,OAAO,CAAC,EAAE;YACR,OAAO,OAAO,CAAC;YACf,kBAAkB;SACrB;IACL,CAAC;IACD;;;OAGG;IAII,kBAAkB;QACrB,OAAO,IAAI,CAAC,yBAAyB,CAAC,oBAAoB,CAAC,IAAI,CAAC,kBAAkB,CAAC,CAAC;IACxF,CAAC;;;;;;;;;;;;;;;;;;AC5/BL;AACA;AACA;AACA;AAC4E;AAC5E;AACA;AACO;AACP;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2BAA2B;AACxE;AACA;AACA,eAAe;AACf;AACA;AACA;AACA,wBAAwB,kFAAsC;AAC9D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA,qBAAqB,qFAAyC;AAC9D;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,gEAAgE;AAC5J;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,oFAAoF;AAChL;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,uBAAuB;AACnH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,qKAAqK;AACjQ;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,mBAAmB;AAC/G;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,gEAAgE;AAC5J;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,6BAA6B;AACzH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,6BAA6B;AACzH;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,4EAA4E;AACxK;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,mBAAmB;AAC/G;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,+BAA+B;AAC3H;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA,6CAA6C,+CAA+C,yDAAyD;AACrJ;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,2BAA2B;AACxE;AACA;AACA,eAAe;AACf;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO,wBAAwB,2DAAW;AAC1C;AACO,4BAA4B,2DAAW;AAC9C;AACA;;;;;;;;;;;AC9SO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,qBAAqB;AACrB,iBAAiB;AACjB,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6CAA6C,oBAAoB,GAAG,uBAAuB;AAC3F;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iEAAe,yBAAyB,EAAC;AACzC;;;;;;;;;;;;;AC9IqE;AACD;AACX;AACzD;;;;;;;;;;;ACHA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACO;AACP;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;UCrCA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;ACN0C;AAK1C,IAAI,UAAU,GAAQ,SAAS,CAAC;AAChC,IAAI,OAAO,GAAQ,MAAM,CAAC,UAAU,CAAC,CAAC;AACtC,IAAI,uBAAuB,GAAkB;IACzC,IAAI,EAAE,yBAAyB;IAC/B,WAAW,EAAE,sBAAsB;IACnC,KAAK,EAAE,QAAQ;IACf,UAAU,EAAE,OAAO;IACnB,MAAM,EAAE,CAAC,OAAkC,EAAE,EAAE;QAC3C,IAAI,wDAAM,EAAE;YACR,OAAO,IAAI,wDAAM,CAAC,OAAO,CAAC,CAAC;SAC9B;QACD,MAAM,2BAA2B,CAAC;IACtC,CAAC;IACD,iBAAiB,EAAE,CAAC,QAAgB,EAAE,OAAiC,EAAE,YAAoB,EAAE,EAAE;QAC7F,MAAM,cAAc,GAAS,UAAW,CAAC,cAAc,CAAC;QACxD,IAAI,QAAQ,IAAI,cAAc,EAAE;YAC5B,IAAI,cAAc,CAAC,QAAQ,CAAC,CAAC,OAAO,EAAE,YAAY,CAAC,CAAC;SACvD;IACL,CAAC;IACD,MAAM,EAAE,IAAI;CACf,CAAC;AACF,IAAI,OAAO,OAAO,KAAK,WAAW,EAAE;IAChC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;IACxC,OAAO,CAAC,OAAO,CAAC,OAAO,GAAG,OAAO,CAAC,OAAO,CAAC,OAAO,IAAI,EAAE,CAAC;IACxD,OAAO,CAAC,OAAO,CAAC,OAAO,CAAC,yBAAyB,CAAC,GAAG,uBAAuB,CAAC;CAChF;AACD,iEAAe,uBAAuB,EAAC","sources":["webpack:///./src/consoleBox.ts","webpack:///./src/data.ts","webpack:///./src/settings.ts","webpack:///./src/visual.ts","webpack:///./node_modules/powerbi-visuals-utils-formattingmodel/lib/FormattingSettingsComponents.js","webpack:///./node_modules/powerbi-visuals-utils-formattingmodel/lib/FormattingSettingsService.js","webpack:///./node_modules/powerbi-visuals-utils-formattingmodel/lib/index.js","webpack:///./node_modules/powerbi-visuals-utils-formattingmodel/lib/utils/FormattingSettingsUtils.js","webpack:///webpack/bootstrap","webpack:///webpack/runtime/define property getters","webpack:///webpack/runtime/hasOwnProperty shorthand","webpack:///webpack/runtime/make namespace object","webpack:///./.tmp/precompile/visualPlugin.ts"],"sourcesContent":["\n\n// Inicialmente habilitamos los logs\n\n\nexport class consoleBox {\n  private static _THIS_HTML_: HTMLElement\n  constructor() {\n    consoleBox.InitBOX();\n    consoleBox.AddEventoClick();\n  }\n  private static debug(_VALUE_: any = \"\") {\n    console.group('***********DEBUGER ANS***********');\n    console.log(_VALUE_);\n    console.groupEnd();\n  }\n  public static AddEventoClick() {\n    console.log(\"EVENT CLICK CREATED\");\n    const BTN_Toggle: HTMLElement = consoleBox._THIS_HTML_?.querySelector('#allcontent');\n\n    if (BTN_Toggle) {\n      BTN_Toggle.addEventListener(\"click\", function (event) {\n        console.log(\"EVENT CLICK\");\n\n        const BOXCONTENT: HTMLElement = consoleBox._THIS_HTML_?.querySelector(\"logbox\");\n\n        if (BOXCONTENT.classList.contains(\"open\")) {\n\n          BOXCONTENT.classList.remove(\"open\")\n        } else {\n\n          BOXCONTENT.classList.add(\"open\")\n        }\n\n      });\n    }\n  }\n\n  public static InitBOX() {\n    consoleBox._THIS_HTML_ = document.createElement(\"div\");\n    consoleBox._THIS_HTML_.id = \"logbox\";\n    consoleBox._THIS_HTML_.className = \"log\";\n\n    const _show_hidden_ = document.createElement(\"span\");\n    _show_hidden_.id = \"show_hidden\"\n\n    const _allcontent_: HTMLElement = document.createElement(\"div\");\n    _allcontent_.className = \"container-message\";\n    _allcontent_.id = \"allcontent\";\n    _allcontent_.appendChild(document.createTextNode(\"\"));\n\n    consoleBox._THIS_HTML_.appendChild(_show_hidden_);\n    consoleBox._THIS_HTML_.appendChild(_allcontent_);\n    consoleBox._THIS_HTML_.appendChild(consoleBox.style());\n    consoleBox.AddEventoClick();\n  }\n  public static GetDOM(): HTMLElement {\n    return consoleBox._THIS_HTML_\n  }\n\n  public static PrintBox() {\n    document?.querySelector(\"#TblContainerER\").appendChild(consoleBox._THIS_HTML_);\n  }\n  private static style() {\n    const _STYLE_ = document.createElement(\"style\");\n    const cssRules = `\n@charset \"UTF-8\";\n#logbox {\n  display: block;\n  width: 100%;\n  position: absolute;\n  bottom: 0;\n  left: 0;\n  z-index: 999999;\n  cursor: default;\n  background-color: #f4f4f4;\n  margin: 0;\n  height: 1px;\n  padding: 0px;\n}\n#logbox textarea {\n  width: 100%;\n  font-size: 20px;\n  height: 100px;\n  display: block;\n  background-color: rgb(219, 232, 251);\n  color: #616161;\n  border: #aeaeae solid 1px;\n  resize: none;\n  padding: 15px;\n}\n#logbox #show_hidden {\n  position: absolute;\n  top: -25px;\n  right: 30px;\n  display: block;\n  background-color: #f4f4f4;\n  color: #000;\n  width: 50px;\n  text-align: center;\n  font-size: 20px;\n  border-radius: 7px 7px 0 0;\n  font-weight: bold;\n  cursor: pointer;\n}\n#logbox #show_hidden::before {\n  content: \"˄\";\n}\n#logbox.open {\n  padding: 15px;\n  height: 60% !important;\n}\n#logbox.open #allcontent {\n  display: block;\n}\n#logbox.open #show_hidden::before {\n  content: \"˅\";\n}\n#logbox #allcontent {\n  display: none;\n  overflow: scroll;\n  display: block;\n  width: 100%;\n  height: 100%;\n  outline: #ddd solid 2px;\n  padding: 7px;\n}\n#logbox .container-message {\n  display: block;\n  width: 100%;\n  padding: 10px;\n  background-color: #fff;\n  border-radius: 8px;\n  margin-bottom: 30px;\n}\n#logbox .container-message.error {\n  color: red;\n}\n#logbox .container-message.information {\n  color: green;\n}\n#logbox .container-message.warning {\n  color: orange;\n}\n`;\n\n\n    _STYLE_.appendChild(consoleBox.returnText(cssRules));\n    return _STYLE_;\n  }\n\n  private static returnText(_TEXT_: string) {\n\n    return document.createTextNode(_TEXT_);\n  }\n  public static Clear() {\n    consoleBox._THIS_HTML_.remove();\n  }\n  /*public static html() {\n          const _H1_ = document.createElement(\"h1\")\n          _H1_.innerHTML = '<h1 style=\"position:absolute;z-index:9999;left:0;top:0;color:red;font-size:38px\">GUILLERMO MAURICIO ROCHA ORTIZ</h1>';//.appendChild(document.createTextNode(\"GUILLERMO MAURICIO ROCHA ORTIZ\"))\n          document?.querySelector(\"#TblContainerER\").appendChild(_H1_)\n      }*/\n  public static Log(_VALUE_: any) {\n\n\n    consoleBox.debug(JSON.stringify(_VALUE_));\n\n    const _INNER_CONTENT_: HTMLElement = consoleBox._THIS_HTML_?.querySelector('#allcontent')//consoleBox._THIS_HTML_.getElementById(\"allcontent\");\n\n    consoleBox.debug(\"PASÓ 1:\");\n    if (_INNER_CONTENT_) {\n      consoleBox.debug(\"HTML:\");\n\n    } else {\n      consoleBox.debug(\"NO HTML:\");\n\n    }\n    consoleBox.debug(\"PASÓ 2\");\n    _INNER_CONTENT_.appendChild(document.createElement(\"span\"));\n    consoleBox.debug(\"PASÓ 3\");\n\n  }\n\n  /* static log() {\n \n       console.log(...arguments);\n \n   }*/\n\n  /*static warn() {\n\n      console.warn(...arguments);\n\n  }\n\n  static info() {\n\n      console.info(...arguments);\n\n  }\n\n  static error() {\n\n      console.error(...arguments);\n\n  }*/\n}","import { ANS_DataTypeJsonStructure, ANS_DataTypeJsonSimpleStructure } from \"./types\";\n/*\nexport type ANS_DataTypeJsonStructure = {\n    account: ANS_DataTypeValues,\n    categories: ANS_DataTypeValues,\n    group_account_name: ANS_DataTypeValues,\n    account_name: ANS_DataTypeValues,\n    PreviousYear: ANS_DataTypeValues,\n    Budget: ANS_DataTypeValues,\n    CurrentYear: ANS_DataTypeValues,\n    difDollar: ANS_DataTypeValues,\n    difPercentage: ANS_DataTypeValues,\n    current_date: ANS_DataTypeValues\n}\nexport type ANS_DataTypeJsonSimpleStructure = {\n\n    categories: string,\n\n    PreviousYear: number,\n    Budget: number,\n    CurrentYear: number,\n    difDollar: number,\n    difPercentage: number\n}\nexport type ANS_DataTypeValues = {\n    value: any,\n    position: number\n}*/\nexport class ANS_JsonDB {\n\n    //private static _JSON_Struct_: ANS_DataTypeJsonStructure | ANS_DataTypeJsonSimpleStructure;\n    constructor() {\n        //ANS_JsonDB._JSON_Struct_ = ANS_JsonDB.Init_JSON_Structure();\n    }\n    public static get_data_cel(): ANS_DataTypeJsonStructure | ANS_DataTypeJsonSimpleStructure {\n        return null;// return ANS_JsonDB._JSON_Struct_;\n    }\n    public static return_JSON_structure(): ANS_DataTypeJsonStructure {\n        return {\n            account: {\n                value: \"\",\n                position: 0\n            },\n            categories: {\n                value: \"\",\n                position: 0\n            },\n            group_account_name: {\n                value: \"\",\n                position: 0\n            },\n            account_name: {\n                value: \"\",\n                position: 0\n            },\n            PreviousYear: {\n                value: \"\",\n                position: 0\n            },\n            Budget: {\n                value: \"\",\n                position: 0\n            },\n            CurrentYear: {\n                value: \"\",\n                position: 0\n            },\n            difDollar: {\n                value: \"\",\n                position: 0\n            },\n            difPercentage: {\n                value: \"\",\n                position: 0\n            },\n            current_date: null\n        }\n    }\n    public static return_JSON_simple_structure(): ANS_DataTypeJsonSimpleStructure {\n        return {\n\n            categories: \"\",\n            PreviousYear: 0,\n            Budget: 0,\n            CurrentYear: 0,\n            difDollar: 0,\n            difPercentage: 0\n        }\n    }\n\n}\n//export ","/*\n *  Power BI Visualizations\n *\n *  Copyright (c) Microsoft Corporation\n *  All rights reserved.\n *  MIT License\n *\n *  Permission is hereby granted, free of charge, to any person obtaining a copy\n *  of this software and associated documentation files (the \"\"Software\"\"), to deal\n *  in the Software without restriction, including without limitation the rights\n *  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n *  copies of the Software, and to permit persons to whom the Software is\n *  furnished to do so, subject to the following conditions:\n *\n *  The above copyright notice and this permission notice shall be included in\n *  all copies or substantial portions of the Software.\n *\n *  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n *  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n *  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n *  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n *  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n *  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n *  THE SOFTWARE.\n */\n\n\"use strict\";\n\nimport { formattingSettings } from \"powerbi-visuals-utils-formattingmodel\";\n\nimport FormattingSettingsCard = formattingSettings.Card;\nimport FormattingSettingsSlice = formattingSettings.Slice;\nimport FormattingSettingsModel = formattingSettings.Model;\n\n/**\n * Data Point Formatting Card\n */\nclass DataPointCardSettings extends FormattingSettingsCard {\n\n\n    BackGroundColor = new formattingSettings.ColorPicker({\n        name: \"BackGroundColor\",\n        displayName: \"Background Color\",\n        value: { value: \"#FFFFFF\" }\n    });\n\n    BackGroundColorAccount = new formattingSettings.ColorPicker({\n        name: \"BackGroundColorAccount\",\n        displayName: \"Background Color Type Account\",\n        value: { value: \"#FFFFFF\" }\n    });\n\n    BackGroundColorHeaders = new formattingSettings.ColorPicker({\n        name: \"BackGroundColorHeaders\",\n        displayName: \"Background Color Headers\",\n        value: { value: \"#FFFFFF\" }\n    });\n    BackGroundColorHeadersColor = new formattingSettings.ColorPicker({\n        name: \"BackGroundColorHeadersColor\",\n        displayName: \"Text Color Headers\",\n        value: { value: \"#FFFFFF\" }\n    });\n\n    LabelExpenses = new formattingSettings.TextInput({\n        placeholder: \"Label Expenses\",\n        name: \"LabelExpenses\",\n        displayName: \"Label Expenses\",\n        value: \"Label Expense\"\n    });\n\n    LabelIncome = new formattingSettings.TextInput({\n        placeholder: \"Label Income\",\n        name: \"LabelIncome\",\n        displayName: \"Label Income\",\n        value: \"Label Income\"\n    });\n\n\n\n\n    LabelTotalExpenses = new formattingSettings.TextInput({\n        placeholder: \"Label Total Expenses\",\n        name: \"LabelTotalExpenses\",\n        displayName: \"Label Total Expenses\",\n        value: \"Label Expense\"\n    });\n\n    LabelTotalIncome = new formattingSettings.TextInput({\n        placeholder: \"Label Total Income\",\n        name: \"LabelTotalIncome\",\n        displayName: \"Label Total Income\",\n        value: \"Label Total Income\"\n    });\n\n    /*v----- */\n    LabelTotalProfit = new formattingSettings.TextInput({\n        placeholder: \"Label Total Profit\",\n        name: \"LabelTotalProfit\",\n        displayName: \"Label Total Profit\",\n        value: \"Label Total Profit\"\n    });\n\n    LabelRevenues = new formattingSettings.TextInput({\n        placeholder: \"Label NON-Operatin Revenues\",\n        name: \"LabelRevenues\",\n        displayName: \"Label NON-Operatin Revenues\",\n        value: \"Label NON-Operatin Revenues\"\n    });\n    LabelTotalRevenues = new formattingSettings.TextInput({\n        placeholder: \"Label Total NON-Operatin Revenues\",\n        name: \"LabelTotalRevenues\",\n        displayName: \"Label Total NON-Operatin Revenues\",\n        value: \"Label Total NON-Operatin Revenues\"\n    });\n    LabelTotalNetResultOperation = new formattingSettings.TextInput({\n        placeholder: \"Label Total Net Result Operation\",\n        name: \"LabelTotalNetResultOperation\",\n        displayName: \"Label Total Net Result Operation\",\n        value: \"Label Total Net Result Operation\"\n    });\n\n    /*v----- */\n\n\n\n    DecimalPlace = new formattingSettings.NumUpDown({\n        name: \"DecimalPlace\",\n        displayName: \"Decimal Place\",\n        value: 2,\n        options: {\n            minValue: {\n                type: powerbi.visuals.ValidatorType.Min,\n                value: 0,\n            },\n            maxValue: {\n                type: powerbi.visuals.ValidatorType.Max,\n                value: 8,\n            },\n        }\n\n    });\n\n    name: string = \"format_table\";\n    displayName: string = \"Format Table\";\n    slices: Array<FormattingSettingsSlice> = [\n        this.LabelIncome,\n        this.LabelTotalIncome,\n        this.LabelExpenses,\n        this.LabelTotalExpenses,\n        this.BackGroundColorHeaders,\n        this.BackGroundColorHeadersColor,\n        this.BackGroundColor,\n        this.DecimalPlace,\n        this.BackGroundColorAccount,\n        this.LabelTotalProfit,\n        this.LabelRevenues,\n        this.LabelTotalRevenues,\n        this.LabelTotalNetResultOperation\n    ];\n}\n\n/**\n* visual settings model class\n*\n*/\nexport class VisualFormattingSettingsModel extends FormattingSettingsModel {\n    // Create formatting settings model formatting cards\n    dataPointCard = new DataPointCardSettings();\n\n    cards = [this.dataPointCard];\n}/*\nclass VisualCustomSettingsType<NumType> {\n    zeroValue: NumType;\n    add: (x: NumType, y: NumType) => NumType;\n}\ntype VisualCustomSettingsType = {\n    name: string;\n    knownFor: string[];\n};*/\nexport type VisualCustomSettingsType = {\n    INCOME: {\n        Label: string,\n        LabelTotal: string\n    },\n    EXPENSES: {\n        Label: string,\n        LabelTotal: string\n    },\n    PROFIT: {\n        Label: string,\n        LabelTotal: string\n    },\n    REVENUES: {\n        Label: string,\n        LabelTotal: string\n    },\n    NETRESULTOPERATION: {\n        Label: string,\n        LabelTotal: string\n    },\n\n    ValueDecimalPlaces: number,\n    BackGroundColor: string,\n    BackGroundColorAccount: string,\n    BackGroundColorHeaders: string,\n    BackGroundColorHeadersColor: string,\n\n}\nexport class VisualCustomSettingsModel implements VisualCustomSettingsType {\n    constructor(\n        public INCOME: { Label: string; LabelTotal: string; } = null,\n        public EXPENSES: { Label: string; LabelTotal: string; } = null,\n        public PROFIT: { Label: string; LabelTotal: string; } = null,\n        public REVENUES: { Label: string; LabelTotal: string; } = null,\n        public NETRESULTOPERATION: { Label: string; LabelTotal: string; } = null,\n        public ValueDecimalPlaces: number = 3,\n        public BackGroundColor: string = \"#FFFFFF\",\n        public BackGroundColorAccount: string = \"#FFFFFF\",\n        public BackGroundColorHeaders: string = \"#FFFFFF\",\n        public BackGroundColorHeadersColor: string = \"#FFFFFF\") {\n\n    }\n    public getSettings(_SETTINGS_) {\n        const _AllSettings_: VisualCustomSettingsType = {\n            INCOME: {\n                Label: _SETTINGS_.dataPointCard.LabelIncome.value,\n                LabelTotal: _SETTINGS_.dataPointCard.LabelTotalIncome.value\n            },\n            EXPENSES: {\n                Label: _SETTINGS_.dataPointCard.LabelExpenses.value,\n                LabelTotal: _SETTINGS_.dataPointCard.LabelTotalExpenses.value\n            },\n            PROFIT: {\n                Label: null,\n                LabelTotal: _SETTINGS_.dataPointCard.LabelTotalProfit.value\n            },\n            REVENUES: {\n                Label: _SETTINGS_.dataPointCard.LabelRevenues.value,\n                LabelTotal: _SETTINGS_.dataPointCard.LabelTotalRevenues.value\n            },\n            NETRESULTOPERATION: {\n                Label: _SETTINGS_.dataPointCard.LabelTotalNetResultOperation.value,\n                LabelTotal: _SETTINGS_.dataPointCard.LabelTotalNetResultOperation.value\n            },\n            ValueDecimalPlaces: _SETTINGS_.dataPointCard.DecimalPlace.value,\n            BackGroundColor: _SETTINGS_.dataPointCard.BackGroundColor.value.value,\n            BackGroundColorAccount: _SETTINGS_.dataPointCard.BackGroundColorAccount.value.value,\n            BackGroundColorHeaders: _SETTINGS_.dataPointCard.BackGroundColorHeaders.value.value,\n            BackGroundColorHeadersColor: _SETTINGS_.dataPointCard.BackGroundColorHeadersColor.value.value\n\n        };\n\n        return _AllSettings_;\n    }\n}","/*\n*  Power BI Visual CLI\n*\n*  Copyright (c) Microsoft Corporation\n*  All rights reserved.\n*  MIT License\n*\n*  Permission is hereby granted, free of charge, to any person obtaining a copy\n*  of this software and associated documentation files (the \"\"Software\"\"), to deal\n*  in the Software without restriction, including without limitation the rights\n*  to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n*  copies of the Software, and to permit persons to whom the Software is\n*  furnished to do so, subject to the following conditions:\n*\n*  The above copyright notice and this permission notice shall be included in\n*  all copies or substantial portions of the Software.\n*\n*  THE SOFTWARE IS PROVIDED *AS IS*, WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n*  IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n*  FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE\n*  AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n*  LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n*  OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n*  THE SOFTWARE.\n*/\n\"use strict\";\n\nimport \"./../style/visual.less\";\nimport powerbi from \"powerbi-visuals-api\";\nimport VisualConstructorOptions = powerbi.extensibility.visual.VisualConstructorOptions;\nimport VisualUpdateOptions = powerbi.extensibility.visual.VisualUpdateOptions;\nimport IVisual = powerbi.extensibility.visual.IVisual;\nimport DataView = powerbi.DataView;\nimport IVisualHost = powerbi.extensibility.IVisualHost;\nimport * as d3 from \"d3\";\n\nimport { ANS_JsonDB } from \"./data\"\n\nimport { consoleBox } from \"./consoleBox\"\n\ntype Selection<T extends d3.BaseType> = d3.Selection<T, any, any, any>;\nimport { FormattingSettingsService } from \"powerbi-visuals-utils-formattingmodel\";\n\n\n\nimport { VisualFormattingSettingsModel } from \"./settings\";\n\nimport { VisualCustomSettingsModel, VisualCustomSettingsType } from \"./settings\";\nexport class Visual implements IVisual {\n    static target: HTMLElement;\n    private updateCount: number;\n    private textNode: Text;\n    private AllColumnNames: string;\n    private executeUpdate: boolean;\n    private table: HTMLParagraphElement;\n    private formattingSettings: VisualFormattingSettingsModel;\n\n    private formattingSettingsService: FormattingSettingsService;\n    private dataView: DataView;\n\n    static _id_event_click_global_ = \"\";\n    static GrandTotal = {\n        INCOME: ANS_JsonDB.return_JSON_structure(),\n        EXPENSES: ANS_JsonDB.return_JSON_structure(),\n        PROFIT: ANS_JsonDB.return_JSON_structure(),\n        REVENUES: ANS_JsonDB.return_JSON_structure(),\n        NETRESULTOPERATION: ANS_JsonDB.return_JSON_structure(),\n        ITDA_VALUE: ANS_JsonDB.return_JSON_structure(),\n        EBITDA_VALUE: ANS_JsonDB.return_JSON_structure(),\n        EBITDA_PERCENTAGE: ANS_JsonDB.return_JSON_structure()\n    };\n\n\n\n\n\n    static settings_obj: VisualCustomSettingsType;\n    constructor(options: VisualConstructorOptions) {\n        //////console.log('Visual constructor WWW:', options);\n        this.formattingSettingsService = new FormattingSettingsService();\n        Visual.target = options.element;\n        this.executeUpdate = false;\n\n\n        if (document) {\n\n\n\n\n            //  this.AllColumnNames = \"casa, oficina, trabajo\";\n\n            const TblContainerER = document.createElement(\"div\");\n            TblContainerER.className = \"TblContainerER\";\n            TblContainerER.setAttribute(\"id\", \"TblContainerER\");\n            // TblContainerER.className = \"open\";\n\n\n            Visual.target.appendChild(TblContainerER);\n\n\n\n        }\n    }\n    public static getCurrentLine(): number {\n        const error = new Error();\n        const stackLines = error.stack?.split(\"\\n\") || [];\n\n        // Dependiendo del entorno, la línea con la información del stack trace puede variar\n        const currentStackLine = stackLines[2]; // La tercera línea suele ser la actual\n        const lineMatch = currentStackLine.match(/:(\\d+):\\d+/);\n\n        return lineMatch ? parseInt(lineMatch[1], 10) : -1; // Devuelve el número de línea\n    }\n    public static LogBOX(_VALUE_: string = null, style: string = \"error\"/* error,information,warning */) {\n        let _cell_textarea_: HTMLElement = document.getElementById(\"logbox\");\n        //let t = document.createTextNode(_VALUE_);\n\n        if (!_cell_textarea_) {\n            const _show_hidden_ = document.createElement(\"div\");\n            const _allcontent_ = document.createElement(\"div\");\n            _allcontent_.id = \"allcontent\";\n            _show_hidden_.id = \"show_hidden\"\n            _cell_textarea_ = document.createElement(\"div\");\n            _cell_textarea_.className = \"log\";\n            _cell_textarea_.id = \"logbox\";\n            _allcontent_.innerHTML = '<div class=\"container-message ' + style + '\"><textarea style=\"display:block;width_100%; height:150px\">' + _VALUE_ + \"</textarea></div>\";\n            _cell_textarea_.appendChild(_show_hidden_);\n            _cell_textarea_.appendChild(_allcontent_);\n\n\n\n            Visual.target.appendChild(_cell_textarea_)\n\n            Visual.agregarEventoClick();\n        } else {\n            const _allcontent_ = document.getElementById(\"allcontent\");\n            _allcontent_.innerHTML += '<div class=\"container-message ' + style + '\"><textarea style=\"display:block;width_100%; height:150px\">' + _VALUE_ + \"</textarea></div>\";\n            // _cell_textarea_.innerHTML += '<div class=\"container-message ' + style + '\">' + _VALUE_ + \"</div>\";\n            // _cell_textarea_.appendChild(t);\n        }\n\n\n\n        if (_VALUE_ == null) {\n            //_cell_textarea_.innerHTML = \"\";\n            if ($(\".container-message\").length) {\n                $(\".container-message\").remove();\n            }\n        }\n\n    }\n    public static ReturnCell(typecel: string, TextContent: any, theClass: string = \"\", colspan: number = null): HTMLElement {\n\n        // let _cell_: HTMLElement = document.createElement(typecel);\n        const _cell_ = document.createElement(typecel);\n        //_cell_.appendChild(document.createTextNode(TextContent));\n        _cell_.innerHTML = TextContent;\n\n        if (theClass != \"\") {\n            _cell_.className = theClass;\n        }\n        if (colspan !== null) {\n            _cell_.setAttribute('colspan', colspan.toString());\n        }\n\n        //     let _cell_: HTMLElement = d3.selectAll(\"Table\")\n\n        return _cell_;\n\n\n    }\n    private ExistPropierty(value, _prop_: string = null) {\n        if (_prop_ !== null) {\n            if (typeof value === 'object' && value !== null && value.hasOwnProperty(_prop_) && typeof value !== 'undefined') {\n                return true;\n            } else {\n                return false;\n            }\n        } else {\n            if (value === null || typeof value === 'undefined') {\n                return false;\n            } else {\n                return true;\n            }\n        }\n\n    }\n\n    private static checkValue(value: any, round: boolean = false, replaceValue: any = \"\") {\n        if (value == null || value === null || typeof value === 'undefined') {\n            return replaceValue;\n        } else {\n            return (round) ? (Number(value)) : value;\n        }\n    }\n    private static returnDate(_date_: Date) {\n        const day = _date_.getDate().toString();\n        /* const MontString = [\n             \"E\"\n         ]*/\n        const month = (_date_.getMonth() + 1).toString();\n        const year = _date_.getFullYear();\n        return `${day}-${month}-${year}`;\n\n    }\n\n    private static ReplaceYTD(name: string, lastYTD: string, currentYTD: string) {\n        return ((name).replace(\"[CURRENT YEAR]\", currentYTD).replace(\"[LAST YEAR]\", lastYTD)).replace(/\\s+/g, \"<br>\")\n    }\n    private onlyUnique(value, index, self) {\n        return self.indexOf(value) === index;\n    }\n    private static getRowValuesJson(_ROW_VALUES_, _DB_TITLE_COLUMNS_) {\n        return {\n            account: _ROW_VALUES_[_DB_TITLE_COLUMNS_.account.position],\n            categories: _ROW_VALUES_[_DB_TITLE_COLUMNS_.categories.position],\n            group_account_name: _ROW_VALUES_[_DB_TITLE_COLUMNS_.group_account_name.position],\n            account_name: _ROW_VALUES_[_DB_TITLE_COLUMNS_.account_name.position],\n            PreviousYear: Number((_ROW_VALUES_[_DB_TITLE_COLUMNS_.PreviousYear.position])),\n            Budget: Number((_ROW_VALUES_[_DB_TITLE_COLUMNS_.Budget.position])),\n            CurrentYear: Number((_ROW_VALUES_[_DB_TITLE_COLUMNS_.CurrentYear.position])),\n            difDollar: Number((_ROW_VALUES_[_DB_TITLE_COLUMNS_.difDollar.position])),\n            difPercentage: Number((_ROW_VALUES_[_DB_TITLE_COLUMNS_.difPercentage.position]))\n        }\n    }\n    private returnDB_Json(JsonDB: any) {\n        // let tmpArray = JsonDB.categorical.categories;\n        const _DB_ = {\n            TITLE_COLUMNS: {\n                VALUES: [ANS_JsonDB.return_JSON_structure()]\n            },\n            VALUES: [],\n            \"INCOME\": {\n                VALUES: []\n            },\n            \"EXPENSES\": {\n                VALUES: []\n            },\n            \"PROFIT\": {\n                VALUES: []\n            },\n            \"REVENUES\": {\n                VALUES: []\n            },\n            \"NETRESULTOPERATION\": {\n                VALUES: []\n            },\n            \"CURRENT_YTD\": \"\",\n            \"LAST_YTD\": \"\",\n        };\n\n        (JsonDB.columns).forEach((_ROW_TITLES_ACCOUNTS_: any) => {\n            const ColumnsPositions = {\n                value: JSON.stringify(_ROW_TITLES_ACCOUNTS_.displayName),\n                position: parseInt(_ROW_TITLES_ACCOUNTS_.index)\n            };\n            if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"account\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].account = ColumnsPositions;\n\n            } else if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"categories\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].categories = ColumnsPositions;\n\n            }\n            else if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"group_account_name\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].group_account_name = ColumnsPositions;\n\n            }\n\n            else if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"account_name\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].account_name = ColumnsPositions;\n\n            } else if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"PreviousYear\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].PreviousYear = ColumnsPositions;\n\n            } else if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"Budget\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].Budget = ColumnsPositions;\n\n            } else if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"CurrentYear\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].CurrentYear = ColumnsPositions;\n\n            } else if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"difDollar\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].difDollar = ColumnsPositions;\n\n            } else if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"difPercentage\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].difPercentage = ColumnsPositions;\n\n            }\n            else if (_ROW_TITLES_ACCOUNTS_.roles.hasOwnProperty(\"current_date\")) {\n                _DB_.TITLE_COLUMNS.VALUES[0].current_date = ColumnsPositions;\n\n            }\n        });\n        consoleBox.Log(_DB_);\n\n        (JsonDB.rows).forEach((_ROW_VALUES_: any/*, row: number*/) => {\n\n            let AccountType: string = '';\n\n\n            if (_ROW_VALUES_[_DB_.TITLE_COLUMNS.VALUES[0].categories.position] !== null) {\n                AccountType = _ROW_VALUES_[_DB_.TITLE_COLUMNS.VALUES[0].account.position];\n                const TMPVALUES = Visual.getRowValuesJson(_ROW_VALUES_, _DB_.TITLE_COLUMNS.VALUES[0])\n                if ((TMPVALUES.categories === \"FINANCIAL/DEPRECIATION\") && (((TMPVALUES.account_name).toUpperCase()).includes((\"Amortizations\").toUpperCase()) || ((TMPVALUES.account_name).toUpperCase()).includes((\"Depreciation\").toUpperCase()) || ((TMPVALUES.account_name).toUpperCase()).includes((\"Interest Payment\").toUpperCase()))) {\n\n\n                    Visual.GrandTotal.ITDA_VALUE.categories.value = \"EBITDA (US$)\";\n                    Visual.GrandTotal.ITDA_VALUE.PreviousYear.value = Number(Visual.GrandTotal.ITDA_VALUE.PreviousYear.value) + Number(TMPVALUES.PreviousYear);\n                    Visual.GrandTotal.ITDA_VALUE.Budget.value = Number(Visual.GrandTotal.ITDA_VALUE.Budget.value) + Number(TMPVALUES.Budget);\n                    Visual.GrandTotal.ITDA_VALUE.CurrentYear.value = Number(Visual.GrandTotal.ITDA_VALUE.CurrentYear.value) + Number(TMPVALUES.CurrentYear);\n                    Visual.GrandTotal.ITDA_VALUE.difDollar.value = Number(Visual.GrandTotal.ITDA_VALUE.difDollar.value) + Number(TMPVALUES.difDollar);\n                    Visual.GrandTotal.ITDA_VALUE.difPercentage.value = Number(Visual.GrandTotal.ITDA_VALUE.difPercentage.value) + Number(TMPVALUES.difPercentage);\n\n\n                }\n                //  _DB_.VALUES.push(TMPVALUES);\n                if (AccountType == \"OPERATING INCOME\") {\n                    _DB_.INCOME.VALUES.push(TMPVALUES);\n\n                } else if (AccountType == \"OPERATING EXPENSES\") {\n                    _DB_.EXPENSES.VALUES.push(TMPVALUES);\n\n\n                } else if (AccountType == \"NON-OPERATING REVENUES\") {\n                    _DB_.REVENUES.VALUES.push(TMPVALUES);\n                }\n            }\n\n            if (_DB_.CURRENT_YTD == \"\") {\n                _DB_.CURRENT_YTD = Visual.returnFormatYTD(_ROW_VALUES_[_DB_.TITLE_COLUMNS.VALUES[0].current_date.position], \"current\");\n                _DB_.LAST_YTD = Visual.returnFormatYTD(_ROW_VALUES_[_DB_.TITLE_COLUMNS.VALUES[0].current_date.position], \"last\");\n                _DB_.TITLE_COLUMNS.VALUES[0].account.value = Visual.ReplaceYTD(_DB_.TITLE_COLUMNS.VALUES[0].account.value, _DB_.LAST_YTD, _DB_.CURRENT_YTD);\n                _DB_.TITLE_COLUMNS.VALUES[0].PreviousYear.value = Visual.ReplaceYTD(_DB_.TITLE_COLUMNS.VALUES[0].PreviousYear.value, _DB_.LAST_YTD, _DB_.CURRENT_YTD);\n                _DB_.TITLE_COLUMNS.VALUES[0].Budget.value = Visual.ReplaceYTD(_DB_.TITLE_COLUMNS.VALUES[0].Budget.value, _DB_.LAST_YTD, _DB_.CURRENT_YTD);\n                _DB_.TITLE_COLUMNS.VALUES[0].CurrentYear.value = Visual.ReplaceYTD(_DB_.TITLE_COLUMNS.VALUES[0].CurrentYear.value, _DB_.LAST_YTD, _DB_.CURRENT_YTD);\n                _DB_.TITLE_COLUMNS.VALUES[0].difDollar.value = Visual.ReplaceYTD(_DB_.TITLE_COLUMNS.VALUES[0].difDollar.value, _DB_.LAST_YTD, _DB_.CURRENT_YTD);\n                _DB_.TITLE_COLUMNS.VALUES[0].difPercentage.value = Visual.ReplaceYTD(_DB_.TITLE_COLUMNS.VALUES[0].difPercentage.value, _DB_.LAST_YTD, _DB_.CURRENT_YTD);\n\n            }\n\n        });\n\n        return _DB_;\n\n    }\n    private static isNumeric(value?: string | number): boolean {\n        return ((value != null) &&\n            (value !== '') &&\n            !isNaN(Number(value.toString())));\n    }\n    private static returnFormatYTD(_date_: string, type: string = 'current') {\n\n        const rest = (type == \"current\") ? 2000 : 2001;\n        return ((new Date(_date_)).toLocaleString('default', { month: 'short' }) + \"-\" + (parseInt((new Date(_date_)).toLocaleString('default', { year: 'numeric' })) - rest)).replace(/^\\w/, (c) => c.toUpperCase())\n    }\n    static returnStyleOutput(value: any, symbol: any = null, rounded: boolean = true) {\n        value = Visual.isNumeric(value) ? Visual.PrintFormatNumeric(value, false, false, rounded) : value\n\n        if (symbol !== null) {\n            if (symbol == \"$\" || symbol == \"U$\" || symbol == \"US$\" || symbol == \"C$\") {\n                return \"<span><i>\" + symbol + \"</i>\" + ((value + \"\") == \"-0\" ? \"-\" : value) + \"</span>\";\n            } else if (symbol == \"%\") {\n                return \"<span>\" + ((value).replace(\"(\", \"-\")).replace(\")\", \"\") + \"%</span>\";\n            }\n        } else {\n            return \"<span>\" + value + \"</span>\";\n        }\n    }\n    private static capitalizar(str) {\n        return str.replace(/\\w\\S*/g, function (txt) {\n            return txt.charAt(0).toUpperCase() + txt.substr(1).toLowerCase();\n        });\n        0\n    }\n    private static ReturnRowWithData(_DATA_ROW_, ClassRow: string = null) {\n        const RowWithData = document.createElement(\"tr\");\n\n\n        if (ClassRow === \"is_row_category\") {\n            if (ClassRow != null) {\n                RowWithData.className = ClassRow + \" \" + Visual._id_event_click_global_;\n                RowWithData.setAttribute(\"data-category\", Visual.doDashes(_DATA_ROW_.categories));\n            }\n            RowWithData.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_DATA_ROW_.categories), \"is_string\"));\n        }\n\n        else if (ClassRow === \"is_row_group_acount\") {\n            if (ClassRow != null) {\n                RowWithData.className = ClassRow + \" \" + Visual._id_event_click_global_;\n                RowWithData.setAttribute(\"data-group-acount\", Visual.doDashes(_DATA_ROW_.group_account_name));\n            }\n            RowWithData.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_DATA_ROW_.group_account_name), \"is_string\"));\n\n        }\n        else {\n\n            RowWithData.className = ClassRow + \" hidden \" + Visual.doDashes(_DATA_ROW_.categories);\n            RowWithData.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_DATA_ROW_.account_name), \"is_string \"));\n        }\n\n\n        RowWithData.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_DATA_ROW_.PreviousYear, \"$\"), \"is_numeric\"));\n        RowWithData.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_DATA_ROW_.Budget, \"$\"), \"is_numeric\"));\n        RowWithData.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_DATA_ROW_.CurrentYear, \"$\"), \"is_numeric\"));\n        RowWithData.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_DATA_ROW_.difDollar, \"$\"), \"is_numeric\"));\n        const _value_percent_ = Visual.returnStyleOutput((Number(_DATA_ROW_.Budget) > 0) ? (Number(_DATA_ROW_.difDollar) / Number(_DATA_ROW_.Budget)) * 100 : \"-\", \"%\", false)\n        RowWithData.appendChild(Visual.ReturnCell(\"td\", (_value_percent_ == \"<span>-%</span>\" ? \"<span></span>\" : _value_percent_), \"is_numeric\"));\n        return RowWithData;\n    }\n    private static doDashes(str) {\n        const re = /[^a-z0-9]+/gi; // global and case insensitive matching of non-char/non-numeric\n        const re2 = /^-*|-*$/g;     // get rid of any leading/trailing dashes\n        str = str.replace(re, '-');  // perform the 1st regexp\n        return str.replace(re2, '').toLowerCase(); // ..aaand the second + return lowercased result\n    }\n    private static getRandomArbitrary(min, max) {\n        return (Math.random() * (max - min) + min).toFixed(0);\n    }\n    private static returnTotalLabel(type) {\n        let TotalLabel: any = \"\";\n        switch (type) {\n            case \"PROFIT\":\n                TotalLabel = \"PROFIT\";\n                break;\n            case \"NETRESULTOPERATION\":\n                TotalLabel = \"NETRESULTOPERATION\";\n                break;\n            case \"EBITDA_VALUE\":\n                TotalLabel = \"EBITDA_VALUE\";\n                break;\n            case \"EBITDA_PERCENTAGE\":\n                TotalLabel = \"EBITDA_PERCENTAGE\";\n                break;\n            default:\n                TotalLabel = type\n                break;\n        }\n        return TotalLabel;\n    }\n    /*private static ReturnRow(head_column, _DATAROW_, symbol) {\n        const tmp_row = document.createElement(\"tr\");\n        tmp_row.appendChild(Visual.ReturnCell(\"th\", Visual.returnStyleOutput(head_column, \"is_string_full\")));\n        tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput((_DATAROW_.PreviousYear).toFixed(0), symbol), \"is_numeric\"));\n        tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput((_DATAROW_.Budget).toFixed(0), symbol), \"is_numeric\"));\n        tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput((_DATAROW_.CurrentYear).toFixed(0), symbol), \"is_numeric\"));\n        tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput((_DATAROW_.difDollar).toFixed(0), symbol), \"is_numeric\"));\n        tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput((_DATAROW_.difPercentage).toFixed(1), \"%\", false), \"is_numeric\"));\n        return tmp_row\n    }*/\n    /*private static InitzialiceJSON() {\n        return {\n            account:\"\",\n\n            categories: \"\",\n            PreviousYear: 0,\n            Budget: 0,\n            CurrentYear: 0,\n            difDollar: 0,\n            difPercentage: 0\n        }\n    }*/\n    private static returnJsonEBITDA_VALUE() {\n\n\n        const INCOME_PREVIOUS = Number(Visual.GrandTotal.INCOME.PreviousYear.value);\n        const EBITDA_PREVIOUS = Number(Visual.GrandTotal.EBITDA_VALUE.PreviousYear.value)\n\n        const INCOME_BUDGET = Number(Visual.GrandTotal.INCOME.Budget.value);\n        const EBITDA_BUDGET = Number(Visual.GrandTotal.EBITDA_VALUE.Budget.value);\n\n\n        const INCOME_CURRENTYEAR = Number(Visual.GrandTotal.INCOME.CurrentYear.value);\n        const EBITDA_CURRENTYEAR = Number(Visual.GrandTotal.EBITDA_VALUE.CurrentYear.value);\n\n\n\n\n        const CURRENT_YEAR = (((INCOME_CURRENTYEAR == 0 ? 0 : (EBITDA_CURRENTYEAR / INCOME_CURRENTYEAR))) * 100);\n        const BUDGET = ((INCOME_BUDGET == 0 ? 0 : ((EBITDA_BUDGET / INCOME_BUDGET))) * 100)\n        const DOLLAR = CURRENT_YEAR - BUDGET\n        const PERCENTAGE = (BUDGET == 0 ? 0 : (DOLLAR / BUDGET))\n        return {\n            account: {\n                value: \"\",\n                position: 0\n            },\n            categories: {\n                value: \"\",\n                position: 0\n            },\n            group_account_name: {\n                value: \"\",\n                position: 0\n            },\n            PreviousYear: {\n                value: ((EBITDA_PREVIOUS / INCOME_PREVIOUS) * 100),\n                position: 0\n            },\n            Budget: {\n                value: BUDGET,\n                position: 0\n            },\n            CurrentYear: {\n                value: CURRENT_YEAR,\n                position: 0\n            },\n            difDollar: {\n                value: DOLLAR,\n                position: 0\n            },\n            difPercentage: {\n                value: PERCENTAGE,\n                position: 0\n            },\n        }\n    }\n\n    private static ClearDataValues(__GROUP__: any = null) {\n\n        Visual.GrandTotal[__GROUP__].categories.value = \"\";\n        Visual.GrandTotal[__GROUP__].PreviousYear.value = 0;\n        Visual.GrandTotal[__GROUP__].Budget.value = 0;\n        Visual.GrandTotal[__GROUP__].CurrentYear.value = 0;\n        Visual.GrandTotal[__GROUP__].difDollar.value = 0;\n        Visual.GrandTotal[__GROUP__].difPercentage.value = 0;\n    }\n    private static SetDataValue(__GROUP__: any = null, __DATA_VAUES__: any = null) {\n\n\n\n\n        Visual.GrandTotal[__GROUP__].categories.value = __DATA_VAUES__.categories;\n        Visual.GrandTotal[__GROUP__].PreviousYear.value = __DATA_VAUES__.PreviousYear;\n        Visual.GrandTotal[__GROUP__].Budget.value = __DATA_VAUES__.Budget;\n        Visual.GrandTotal[__GROUP__].CurrentYear.value = __DATA_VAUES__.CurrentYear;\n        Visual.GrandTotal[__GROUP__].difDollar.value = __DATA_VAUES__.difDollar;\n        Visual.GrandTotal[__GROUP__].difPercentage.value = __DATA_VAUES__.difPercentage;\n    }\n    private static UpdateDataValues(__TYPE__: any = null, __DATA_VAUES__: any = null) {\n        if (__TYPE__ !== null && __DATA_VAUES__ !== null) {\n            if (__TYPE__ === \"INCOME\") {\n                __DATA_VAUES__.categories = \"OPERATING INCOME\";\n                Visual.SetDataValue(\"INCOME\", __DATA_VAUES__);\n            } else if (__TYPE__ === \"EXPENSES\") {\n                __DATA_VAUES__.categories = \"OPERATING EXPENSES\";\n                Visual.SetDataValue(\"EXPENSES\", __DATA_VAUES__);\n                Visual.GrandTotal.PROFIT.categories.value = \"PROFIT OPERATION\";\n                Visual.GrandTotal.PROFIT.PreviousYear.value = Visual.GrandTotal.INCOME.PreviousYear.value - Visual.GrandTotal.EXPENSES.PreviousYear.value;\n                Visual.GrandTotal.PROFIT.Budget.value = Visual.GrandTotal.INCOME.Budget.value - Visual.GrandTotal.EXPENSES.Budget.value;\n                Visual.GrandTotal.PROFIT.CurrentYear.value = Visual.GrandTotal.INCOME.CurrentYear.value - Visual.GrandTotal.EXPENSES.CurrentYear.value;\n                Visual.GrandTotal.PROFIT.difDollar.value = Visual.GrandTotal.INCOME.difDollar.value - Visual.GrandTotal.EXPENSES.difDollar.value;\n                Visual.GrandTotal.PROFIT.difPercentage.value = Visual.GrandTotal.INCOME.difPercentage.value - Visual.GrandTotal.EXPENSES.difPercentage.value;\n\n            } else if (__TYPE__ === \"REVENUES\") {\n                __DATA_VAUES__.categories = \"NON-OPERATING REVENUES\";\n                Visual.SetDataValue(\"REVENUES\", __DATA_VAUES__);\n                Visual.GrandTotal.NETRESULTOPERATION.categories.value = \"NET RESULT OPERATION\";\n                Visual.GrandTotal.NETRESULTOPERATION.PreviousYear.value = Visual.GrandTotal.PROFIT.PreviousYear.value + Visual.GrandTotal.REVENUES.PreviousYear.value;\n                Visual.GrandTotal.NETRESULTOPERATION.Budget.value = Visual.GrandTotal.PROFIT.Budget.value + Visual.GrandTotal.REVENUES.Budget.value;\n                Visual.GrandTotal.NETRESULTOPERATION.CurrentYear.value = Visual.GrandTotal.PROFIT.CurrentYear.value + Visual.GrandTotal.REVENUES.CurrentYear.value;\n                Visual.GrandTotal.NETRESULTOPERATION.difDollar.value = Visual.GrandTotal.PROFIT.difDollar.value + Visual.GrandTotal.REVENUES.difDollar.value;\n                Visual.GrandTotal.NETRESULTOPERATION.difPercentage.value = Visual.GrandTotal.PROFIT.difPercentage.value + Visual.GrandTotal.REVENUES.difPercentage.value;\n            }\n        }\n    }\n    private static ReturnGroupedRow(_DATA_: any = null, _DATA_SUM_: any = null) {\n        if (_DATA_ === null) {\n            return {\n                account: \"\",\n                categories: \"\",\n                group_account_name: \"\",\n                PreviousYear: 0,\n                Budget: 0,\n                CurrentYear: 0,\n                difDollar: 0,\n                difPercentage: 0\n            }\n        } else {\n            if (_DATA_SUM_ === null) {\n                return {\n                    account: _DATA_.account,\n                    categories: _DATA_.categories,\n                    group_account_name: _DATA_.group_account_name,\n                    PreviousYear: _DATA_.PreviousYear,\n                    Budget: _DATA_.Budget,\n                    CurrentYear: _DATA_.CurrentYear,\n                    difDollar: _DATA_.difDollar,\n                    difPercentage: _DATA_.difPercentage,\n                }\n            } else {\n                return {\n                    account: _DATA_.account,\n                    categories: _DATA_.categories,\n                    group_account_name: _DATA_.group_account_name,\n                    PreviousYear: _DATA_.PreviousYear + _DATA_SUM_.PreviousYear,\n                    Budget: _DATA_.Budget + _DATA_SUM_.Budget,\n                    CurrentYear: _DATA_.CurrentYear + _DATA_SUM_.CurrentYear,\n                    difDollar: _DATA_.difDollar + _DATA_SUM_.difDollar,\n                    difPercentage: _DATA_.difPercentage + _DATA_SUM_.difPercentage\n                }\n            }\n\n        }\n    }\n    private static CreateRowHTML(_CURRENTE_DATA_ROW_: any = null, className: string = \"\", _symbol_: string = \"$\") {\n\n        const tmp_row = document.createElement(\"tr\");\n        tmp_row.className = className;\n        if (_CURRENTE_DATA_ROW_ !== null) {\n\n            tmp_row.appendChild(Visual.ReturnCell(\"th\", Visual.returnStyleOutput(_CURRENTE_DATA_ROW_.categories.value), \"is_string_full\"));\n            tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_CURRENTE_DATA_ROW_.PreviousYear.value, _symbol_), \"is_numeric\"));\n            tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_CURRENTE_DATA_ROW_.Budget.value, _symbol_), \"is_numeric\"));\n            tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_CURRENTE_DATA_ROW_.CurrentYear.value, _symbol_), \"is_numeric\"));\n            tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_CURRENTE_DATA_ROW_.difDollar.value, _symbol_), \"is_numeric\"));\n            tmp_row.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(_CURRENTE_DATA_ROW_.difPercentage.value, _symbol_, false), \"is_numeric\"));\n        }\n        return tmp_row;\n    }\n\n    private static GenerateAccountTypeTable(type: string = null, DATA: any = null, HEADERS: any = null/*, FOOTERS: any = null, _id_event_: any = null*/) {\n        let _TABLE_ = document.createElement(\"table\");\n        let _T_HEADERS_ = document.createElement(\"thead\");\n        let _T_FOOT_ = document.createElement(\"tfoot\");\n        let _T_BODY_ = document.createElement(\"tbody\");\n        let tmp_row: HTMLElement = document.createElement(\"tr\");\n        tmp_row.className = \"is_row_title_type_account\"\n\n\n        _TABLE_.className = \"tbl_style separator-bottom \" + type;\n        if (type == \"PROFIT\" || type == \"NETRESULTOPERATION\" || type == \"EBITDA_VALUE\" || type == \"EBITDA_PERCENTAGE\") {\n            let TotalLabel = Visual.returnTotalLabel(type);// \"\";\n            let _difPercentage_ = ((((Visual.GrandTotal[TotalLabel].CurrentYear.value) - (Visual.GrandTotal[TotalLabel].Budget.value)) / (Visual.GrandTotal[TotalLabel].Budget.value)) * 100).toFixed(1);\n            if (\"EBITDA_PERCENTAGE\" === type) {\n                let EBITDA_PERCENTAGE = Visual.returnJsonEBITDA_VALUE();\n                EBITDA_PERCENTAGE.categories = Visual.GrandTotal[TotalLabel].categories.value;\n                _T_HEADERS_.appendChild(Visual.CreateRowHTML(EBITDA_PERCENTAGE, \"is_row_title_type_account\", \"%\"));\n\n            } else {\n                Visual.GrandTotal[TotalLabel].difPercentage.value = _difPercentage_;\n                _T_HEADERS_.appendChild(Visual.CreateRowHTML(Visual.GrandTotal[TotalLabel], \"is_row_title_type_account\", \"$\"));\n            }\n            _TABLE_.append(_T_HEADERS_);\n        } else {\n\n            let TotalAccount = Visual.ReturnGroupedRow(); //InitzialiceJSON();\n            let AccountCategory: string = \"\";\n            let SubTotalCategory = Visual.ReturnGroupedRow();\n            if (HEADERS !== null) {\n                _TABLE_.className = \"tbl_style\";\n                if (type === \"HEADERS\") {\n                    tmp_row.className = \"headers\"\n                }\n                for (let key in HEADERS) {\n                    if (\"HEADERS\" === type) {\n                        if (\"account_name\" != key && \"categories\" != key && \"current_date\" != key) {\n                            const cells = ((HEADERS[key]).replace('\"', '')).replace('\"', '');\n                            tmp_row.appendChild(Visual.ReturnCell(\"th\", cells));\n                        }\n                    }\n\n                }\n\n                _T_HEADERS_.appendChild(tmp_row);\n                _TABLE_.append(_T_HEADERS_);\n            }\n            else {\n                _TABLE_.className = \"tbl_style separator-bottom\";\n\n                if (Visual.settings_obj[type].Label != null) {\n                    let tmp_row_title = document.createElement(\"tr\");\n                    tmp_row_title.className = \"is_row_title_type_account\";\n                    tmp_row_title.appendChild(Visual.ReturnCell(\"th\", Visual.returnStyleOutput(Visual.settings_obj[type].Label), \"is_string_full\", 6));\n                    _T_HEADERS_.appendChild(tmp_row_title);\n\n                }\n\n\n                if (DATA) {\n                    let GroupedRow = Visual.ReturnGroupedRow();\n                    let GROUP_CAT = document.createElement(\"div\");\n                    let group_account_name = \"\";\n                    let class_first_element = \"\";\n                    let class_parent = \"\";\n                    (DATA).forEach((_row_: any) => {\n\n                        if (group_account_name == \"\") {\n                            group_account_name = _row_.group_account_name\n                            class_first_element = ' begin_group_' + Visual.doDashes(_row_.group_account_name) + \" \";\n                            class_parent = ' class_parent_' + Visual.doDashes(_row_.group_account_name) + \" \";\n                        }\n                        if (group_account_name !== _row_.group_account_name) {\n                            class_first_element = ' begin_group_' + Visual.doDashes(_row_.group_account_name) + \" \";\n                            class_parent = ' class_parent_' + Visual.doDashes(_row_.group_account_name) + \" \";\n                            group_account_name = _row_.group_account_name;\n                            GroupedRow = Visual.ReturnGroupedRow(_row_);\n                        } else {\n                            GroupedRow = Visual.ReturnGroupedRow(GroupedRow, _row_);\n                        }\n\n                        if (AccountCategory != _row_.categories) {\n                            if (AccountCategory != \"\") {\n                                _T_BODY_.appendChild(Visual.ReturnRowWithData(SubTotalCategory, \"is_row_category\"));\n                                _T_BODY_.innerHTML += GROUP_CAT.innerHTML;\n                                GROUP_CAT.innerHTML = null;\n                                TotalAccount.categories = Visual.settings_obj[type].LabelTotal;\n                                TotalAccount = Visual.ReturnGroupedRow(TotalAccount, SubTotalCategory)\n                                SubTotalCategory = Visual.ReturnGroupedRow();\n                            }\n                            GROUP_CAT = document.createElement(\"div\");\n                        }\n                        SubTotalCategory.categories = _row_.categories;\n                        SubTotalCategory = Visual.ReturnGroupedRow(SubTotalCategory, _row_);\n                        GROUP_CAT.appendChild(Visual.ReturnRowWithData(_row_, \"is_row_title \" + class_first_element + \" \" + class_parent));\n                        AccountCategory = _row_.categories;\n                        class_first_element = \"\"\n                    });\n                    TotalAccount.categories = Visual.settings_obj[type].LabelTotal;\n                    TotalAccount = Visual.ReturnGroupedRow(TotalAccount, SubTotalCategory);\n                    _T_BODY_.appendChild(Visual.ReturnRowWithData(SubTotalCategory, \"is_row_category\"));\n                    _T_BODY_.innerHTML += GROUP_CAT.innerHTML;\n                    GROUP_CAT.innerHTML = null;\n                }\n\n                // if (\"INCOME\" === type) {\n                if (Visual.settings_obj[type].Label != null) {\n                    let tmp_row_footer = document.createElement(\"tr\");\n                    tmp_row_footer.className = \"is_row_title_type_account\";\n                    //tmp_row_footer.appendChild(Visual.ReturnRowWithData(TotalAccount));\n                    TotalAccount.categories = Visual.settings_obj[type].LabelTotal;\n                    TotalAccount.difPercentage = (((TotalAccount.CurrentYear - TotalAccount.Budget) / TotalAccount.Budget) * 100).toFixed(1);\n                    //tmp_row = Visual.ReturnRow(Visual.settings_obj[type].LabelTotal, TotalAccount, \"$\")\n                    //_T_FOOT_.appendChild(Visual.CreateRowHTML(TotalAccount, \"is_row_title_type_account\", \"%\"));\n\n                    tmp_row_footer.appendChild(Visual.ReturnCell(\"th\", Visual.returnStyleOutput(Visual.settings_obj[type].LabelTotal), \"is_string_full\"));\n                    tmp_row_footer.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(TotalAccount.PreviousYear, \"$\"), \"is_numeric\"));\n                    tmp_row_footer.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(TotalAccount.Budget, \"$\"), \"is_numeric\"));\n                    tmp_row_footer.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(TotalAccount.CurrentYear, \"$\"), \"is_numeric\"));\n                    tmp_row_footer.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(TotalAccount.difDollar, \"$\"), \"is_numeric\"));\n                    tmp_row_footer.appendChild(Visual.ReturnCell(\"td\", Visual.returnStyleOutput(TotalAccount.difPercentage, \"%\", false), \"is_numeric\"));\n\n                    //  _T_FOOT_.appendChild(tmp_row_footer);\n                    Visual.UpdateDataValues(type, TotalAccount);\n\n                }\n                _TABLE_.append(_T_HEADERS_);\n                _TABLE_.append(_T_BODY_);\n                _TABLE_.append(_T_FOOT_);\n\n\n                /* if ($.trim(_T_HEADERS_.innerHTML) !== \"\") {\n                     _TABLE_.append(_T_HEADERS_);\n                 }\n                 if ($.trim(_T_BODY_.innerHTML) !== \"\") {\n                     _TABLE_.append(_T_BODY_);\n                 }\n \n                 if ($.trim(_T_FOOT_.innerHTML) !== \"\") {\n                     _TABLE_.append(_T_FOOT_);\n                 }\n */\n\n            }\n        }\n\n\n\n\n\n        return _TABLE_;\n\n    }\n    private static GetDataValues(_DATA_: any) {\n\n        return {\n            account: _DATA_.account.value,\n            categories: _DATA_.categories.value,\n\n            account_name: _DATA_.account_name.value,\n            PreviousYear: _DATA_.PreviousYear.value,\n            Budget: _DATA_.Budget.value,\n            CurrentYear: _DATA_.CurrentYear.value,\n            difDollar: _DATA_.difDollar.value,\n            difPercentage: _DATA_.difPercentage.value\n        }\n    }\n    public InitDataTable() {\n\n\n        const TblContainerER = document.getElementById(\"TblContainerER\");\n        TblContainerER.innerHTML = \"\";\n\n\n        let _ALL_TITLES_ = this.dataView.table;\n        let _ALL_DB_ = this.returnDB_Json(_ALL_TITLES_);\n\n\n        let mifecha: any = new Date(\"10/02/2019\");\n        const fechaInicial: any = new Date();\n        Visual._id_event_click_global_ = \"event_click_\" + Math.abs(mifecha - fechaInicial) + Visual.getRandomArbitrary(100, 999);\n\n\n\n\n        TblContainerER.appendChild(Visual.GenerateAccountTypeTable(\"HEADERS\", null, Visual.GetDataValues(_ALL_DB_.TITLE_COLUMNS.VALUES[0])))\n\n        TblContainerER.appendChild(Visual.GenerateAccountTypeTable(\"INCOME\", _ALL_DB_.INCOME.VALUES))\n\n\n        TblContainerER.appendChild(Visual.GenerateAccountTypeTable(\"EXPENSES\", _ALL_DB_.EXPENSES.VALUES))\n\n        TblContainerER.appendChild(Visual.GenerateAccountTypeTable(\"PROFIT\", _ALL_DB_.PROFIT.VALUES))\n\n        TblContainerER.appendChild(Visual.GenerateAccountTypeTable(\"REVENUES\", _ALL_DB_.REVENUES.VALUES))\n\n        TblContainerER.appendChild(Visual.GenerateAccountTypeTable(\"NETRESULTOPERATION\"))\n\n        Visual.GrandTotal.EBITDA_VALUE.categories.value = \"EBITDA (US$)\";\n        Visual.GrandTotal.EBITDA_VALUE.PreviousYear.value = Number(Visual.GrandTotal.NETRESULTOPERATION.PreviousYear.value) + Number(Visual.GrandTotal.ITDA_VALUE.PreviousYear.value);\n        Visual.GrandTotal.EBITDA_VALUE.Budget.value = Number(Visual.GrandTotal.NETRESULTOPERATION.Budget.value) + Number(Visual.GrandTotal.ITDA_VALUE.Budget.value);\n        Visual.GrandTotal.EBITDA_VALUE.CurrentYear.value = Number(Visual.GrandTotal.NETRESULTOPERATION.CurrentYear.value) + Number(Visual.GrandTotal.ITDA_VALUE.CurrentYear.value);\n        Visual.GrandTotal.EBITDA_VALUE.difDollar.value = Number(Visual.GrandTotal.NETRESULTOPERATION.difDollar.value) + Number(Visual.GrandTotal.ITDA_VALUE.difDollar.value);\n        Visual.GrandTotal.EBITDA_VALUE.difPercentage.value = Number(Visual.GrandTotal.NETRESULTOPERATION.difPercentage.value) + Number(Visual.GrandTotal.ITDA_VALUE.difPercentage.value);\n\n\n        TblContainerER.appendChild(Visual.GenerateAccountTypeTable(\"EBITDA_VALUE\"))\n\n\n\n        Visual.GrandTotal.EBITDA_PERCENTAGE.categories.value = \"EBITDA (%)\";\n        Visual.GrandTotal.EBITDA_PERCENTAGE.PreviousYear.value = (parseFloat(Visual.GrandTotal.EBITDA_VALUE.PreviousYear.value + \"\") / parseFloat(Visual.GrandTotal.INCOME.PreviousYear.value + \"\"))\n        Visual.GrandTotal.EBITDA_PERCENTAGE.CurrentYear.value = Visual.GrandTotal.EBITDA_VALUE.CurrentYear.value / Visual.GrandTotal.INCOME.CurrentYear.value;\n        Visual.GrandTotal.EBITDA_PERCENTAGE.difDollar.value = 0//Visual.GrandTotal.EBITDA_VALUE.difDollar.value / Visual.GrandTotal.INCOME.difDollar.value;\n        Visual.GrandTotal.EBITDA_PERCENTAGE.difPercentage.value = 0//Visual.GrandTotal.EBITDA_VALUE.difPercentage.value / Visual.GrandTotal.INCOME.difPercentage.value;\n\n\n        TblContainerER.appendChild(Visual.GenerateAccountTypeTable(\"EBITDA_PERCENTAGE\"))\n\n\n        Visual.ClearDataValues(\"INCOME\");\n        Visual.ClearDataValues(\"EXPENSES\");\n        Visual.ClearDataValues(\"PROFIT\");\n        Visual.ClearDataValues(\"REVENUES\");\n        Visual.ClearDataValues(\"NETRESULTOPERATION\");\n        Visual.ClearDataValues(\"ITDA_VALUE\");\n        Visual.ClearDataValues(\"EBITDA_VALUE\");\n        Visual.ClearDataValues(\"EBITDA_PERCENTAGE\");\n\n        Visual.target.appendChild(TblContainerER);\n        // consoleBox.PrintBox();\n    }\n\n    public update(options: VisualUpdateOptions) {\n\n\n        this.formattingSettings = this.formattingSettingsService.populateFormattingSettingsModel(VisualFormattingSettingsModel, options.dataViews);\n\n        if (Visual.target) {\n\n            Visual.settings_obj = new VisualCustomSettingsModel().getSettings(this.formattingSettings);\n\n            this.dataView = options.dataViews[0];\n\n\n\n\n            //return false;\n\n            this.InitDataTable();\n            let element: JQuery = $(\".TblContainerER\").parent();\n            //let OBJ_TBL_BODY  $(\".TblContainerER\");\n            element.css(\"background\", Visual.settings_obj.BackGroundColor);\n            element.find(\".tbl_style tr.headers, .EBITDA_VALUE tr, .EBITDA_PERCENTAGE tr\").css(\"background-color\", Visual.settings_obj.BackGroundColorHeaders);\n            element.find(\".tbl_style tr.headers, .EBITDA_VALUE tr, .EBITDA_PERCENTAGE tr\").css(\"color\", Visual.settings_obj.BackGroundColorHeadersColor);\n\n            element.find(\".tbl_style tr.headers th\").css(\"border-color\", Visual.settings_obj.BackGroundColor);\n            element.find(\".tbl_style:not(.EBITDA_VALUE, .EBITDA_PERCENTAGE) .is_row_title_type_account\").css(\"background\", Visual.settings_obj.BackGroundColorAccount);\n\n            $(\"body\").on(\"click\", \".\" + Visual._id_event_click_global_, function () {\n\n\n                let CURRENT_OBJ = $(this);\n                let objCategory = $.trim(CURRENT_OBJ.data(\"category\"));\n                // //console.log(objCategory);\n                if (CURRENT_OBJ.hasClass(\"_show_\")) {\n                    $(\"tr.\" + objCategory).addClass(\"hidden\");\n                    CURRENT_OBJ.removeClass(\"_show_\")\n                } else {\n                    $(\"tr.\" + objCategory).removeClass(\"hidden\");\n                    CURRENT_OBJ.addClass(\"_show_\")\n                }\n\n\n            });\n            //   Visual.agregarEventoClick();\n            /* let LIST_CATEGORIES = \"{\";\n             $(\"body .tbl_style tbody tr.is_row_category\").each(function (i) {\n                 let _str_cat_ = (($(this).find(\"td:first-child\").text()).replace(\" \", \"-\")).replace(\"/\", \"-\")\n                 LIST_CATEGORIES += '\"' + _str_cat_ + '\": {\"open\":false},';\n                 //LIST_CATEGORIES += (LIST_CATEGORIES !== \"\" ? \",\" : \"\") + $(this).find(\"td:first-child\").html();\n     \n             });\n             LIST_CATEGORIES += \"}\";*/\n\n            /* \n     \n     \n             let SHOW_HIDDEN_DIV: JQuery = $(\"#show_hidden\");\n             if (SHOW_HIDDEN_DIV.length) {\n                 SHOW_HIDDEN_DIV.on(\"click\", (event) => {\n                     if ($(\"#logbox\").hasClass(\"open\")) {\n                         $(\"#logbox\").removeClass(\"open\");\n                     } else {\n                         $(\"#logbox\").addClass(\"open\");\n                     }\n     \n                 });\n             }*/\n\n            //consoleBox.html();\n        }\n\n    }\n    public static agregarEventoClick() {\n        console.log(\"EVENT CLICK CREATED\");\n        var BOX_CONSOLE = document.getElementById(\"show_hidden\");\n\n        if (BOX_CONSOLE) {\n            BOX_CONSOLE.addEventListener(\"click\", function (event) {\n                console.log(\"EVENT CLICK\");\n\n                let BOXCONTENT = document.getElementById(\"logbox\");\n\n                if (BOXCONTENT.classList.contains(\"open\")) {\n\n                    BOXCONTENT.classList.remove(\"open\")\n                } else {\n\n                    BOXCONTENT.classList.add(\"open\")\n                }\n                /*if (event.target.tagName === 'TD') {\n                    var fila = event.target.parentNode;\n    \n                    // Remover la clase \"seleccionada\" de todas las filas\n                    var filas = document.querySelectorAll(\"#miTabla tr\");\n                    filas.forEach(function (f) {\n                        f.classList.remove(\"fila-seleccionada\");\n                    });\n    \n                    // Agregar la clase \"fila-seleccionada\" a la fila clickeada\n                    fila.classList.add(\"fila-seleccionada\");\n                }*/\n            });\n        }\n    }\n    private static PrintFormatNumeric(TheValue: any, dec_point: any = false, thousands_point: any = false, rounded: boolean = true): string {\n\n        let number = (TheValue);\n        let decimals = Number(Visual.settings_obj.ValueDecimalPlaces);\n        if (number == null || !isFinite(number)) {\n            throw new TypeError(\"number is not valid\");\n        }\n\n        if (!decimals) {\n            let len = number.toString().split('.').length;\n            decimals = len > 1 ? len : 0;\n        }\n\n        if (!dec_point) {\n            dec_point = '.';\n        }\n\n        if (!thousands_point) {\n            thousands_point = ',';\n        }\n        if (rounded) {\n            number = parseFloat(number).toFixed(0);\n\n        } else {\n            number = parseFloat(number).toFixed(1);\n\n        }\n\n        number = number.replace(\".\", dec_point);\n\n        let splitNum = number.split(dec_point);\n        splitNum[0] = splitNum[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, thousands_point);\n        number = splitNum.join(dec_point);\n\n        let _return_ = ((parseFloat(number) < 0 ? \"(\" + (number).replace(\"-\", \"\") + \")\" : number).replace(\"(0)\", \"-\"));\n\n        return (_return_ === \"0\") ? \"-\" : _return_;\n    }\n    private static formatMoney(amount: any, decimalCount: number = 2, decimal: string = \".\", thousands: string = \",\") {\n        try {\n            decimalCount = Math.abs(decimalCount);\n            decimalCount = isNaN(decimalCount) ? 2 : decimalCount;\n\n            const negativeSign = amount < 0 ? \"-\" : \"\";\n\n            const i: any = parseInt(amount = Math.abs(Number(amount) || 0).toFixed(decimalCount)).toString();\n            const j = (i.length > 3) ? i.length % 3 : 0;\n\n            return negativeSign +\n                (j ? i.substr(0, j) + thousands : '') +\n                i.substr(j).replace(/(\\d{3})(?=\\d)/g, \"$1\" + thousands) +\n                (decimalCount ? decimal + Math.abs(amount - i).toFixed(decimalCount).slice(2) : \"\");\n        } catch (e) {\n            return \"error\";\n            ////console.log(e)\n        }\n    }\n    /**\n     * Returns properties pane formatting model content hierarchies, properties and latest formatting values, Then populate properties pane.\n     * This method is called once every time we open properties pane or when the user edit any format property. \n     */\n\n\n\n    public getFormattingModel(): powerbi.visuals.FormattingModel {\n        return this.formattingSettingsService.buildFormattingModel(this.formattingSettings);\n    }\n\n}","/**\n * Powerbi utils components classes for custom visual formatting pane objects\n *\n */\nimport * as FormattingSettingsParser from \"./utils/FormattingSettingsUtils\";\nclass NamedEntity {\n}\nexport class Model {\n}\nexport class Card extends NamedEntity {\n    getFormattingCard(objectName, group, localizationManager) {\n        return {\n            displayName: (localizationManager && this.displayNameKey)\n                ? localizationManager.getDisplayName(this.displayNameKey) : this.displayName,\n            description: (localizationManager && this.descriptionKey)\n                ? localizationManager.getDisplayName(this.descriptionKey) : this.description,\n            groups: [group],\n            uid: objectName,\n            analyticsPane: this.analyticsPane\n        };\n    }\n}\nexport class SimpleSlice extends NamedEntity {\n    constructor(object) {\n        super();\n        Object.assign(this, object);\n    }\n    getFormattingSlice(objectName, localizationManager) {\n        const controlType = this.type;\n        const propertyName = this.name;\n        const sliceDisplayName = (localizationManager && this.displayNameKey) ? localizationManager.getDisplayName(this.displayNameKey) : this.displayName;\n        const sliceDescription = (localizationManager && this.descriptionKey) ? localizationManager.getDisplayName(this.descriptionKey) : this.description;\n        const componentDisplayName = {\n            displayName: sliceDisplayName,\n            description: sliceDescription,\n            uid: objectName + '-' + propertyName,\n        };\n        return Object.assign(Object.assign({}, componentDisplayName), { control: {\n                type: controlType,\n                properties: this.getFormattingComponent(objectName, localizationManager)\n            } });\n    }\n    getFormattingComponent(objectName, localizationManager) {\n        return {\n            descriptor: FormattingSettingsParser.getDescriptor(objectName, this),\n            value: this.value,\n        };\n    }\n    getRevertToDefaultDescriptor(objectName) {\n        return [{\n                objectName: objectName,\n                propertyName: this.name\n            }];\n    }\n    setPropertiesValues(dataViewObjects, objectName) {\n        var _a;\n        let newValue = (_a = dataViewObjects === null || dataViewObjects === void 0 ? void 0 : dataViewObjects[objectName]) === null || _a === void 0 ? void 0 : _a[this.name];\n        this.value = FormattingSettingsParser.getPropertyValue(this, newValue, this.value);\n    }\n}\nexport class AlignmentGroup extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"AlignmentGroup\" /* visuals.FormattingComponent.AlignmentGroup */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { mode: this.mode, supportsNoSelection: this.supportsNoSelection });\n    }\n}\nexport class ToggleSwitch extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"ToggleSwitch\" /* visuals.FormattingComponent.ToggleSwitch */;\n    }\n}\nexport class ColorPicker extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"ColorPicker\" /* visuals.FormattingComponent.ColorPicker */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { defaultColor: this.defaultColor, isNoFillItemSupported: this.isNoFillItemSupported });\n    }\n}\nexport class NumUpDown extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"NumUpDown\" /* visuals.FormattingComponent.NumUpDown */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { options: this.options });\n    }\n}\nexport class Slider extends NumUpDown {\n    constructor() {\n        super(...arguments);\n        this.type = \"Slider\" /* visuals.FormattingComponent.Slider */;\n    }\n}\nexport class DatePicker extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"DatePicker\" /* visuals.FormattingComponent.DatePicker */;\n    }\n    getFormattingComponent(objectName, localizationManager) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { placeholder: (localizationManager && this.placeholderKey) ? localizationManager.getDisplayName(this.placeholderKey) : this.placeholder, validators: this.validators });\n    }\n}\nexport class ItemDropdown extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"Dropdown\" /* visuals.FormattingComponent.Dropdown */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { items: this.items });\n    }\n}\nexport class AutoDropdown extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"Dropdown\" /* visuals.FormattingComponent.Dropdown */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { mergeValues: this.mergeValues, filterValues: this.filterValues });\n    }\n}\nexport class DurationPicker extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"DurationPicker\" /* visuals.FormattingComponent.DurationPicker */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { validators: this.validators });\n    }\n}\nexport class ErrorRangeControl extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"ErrorRangeControl\" /* visuals.FormattingComponent.ErrorRangeControl */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { validators: this.validators });\n    }\n}\nexport class FieldPicker extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"FieldPicker\" /* visuals.FormattingComponent.FieldPicker */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { validators: this.validators, allowMultipleValues: this.allowMultipleValues });\n    }\n}\nexport class ItemFlagsSelection extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"FlagsSelection\" /* visuals.FormattingComponent.FlagsSelection */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { items: this.items });\n    }\n}\nexport class AutoFlagsSelection extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"FlagsSelection\" /* visuals.FormattingComponent.FlagsSelection */;\n    }\n}\nexport class TextInput extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"TextInput\" /* visuals.FormattingComponent.TextInput */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { placeholder: this.placeholder });\n    }\n}\nexport class TextArea extends TextInput {\n    constructor() {\n        super(...arguments);\n        this.type = \"TextArea\" /* visuals.FormattingComponent.TextArea */;\n    }\n}\nexport class FontPicker extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"FontPicker\" /* visuals.FormattingComponent.FontPicker */;\n    }\n}\nexport class GradientBar extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"GradientBar\" /* visuals.FormattingComponent.GradientBar */;\n    }\n}\nexport class ImageUpload extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"ImageUpload\" /* visuals.FormattingComponent.ImageUpload */;\n    }\n}\nexport class ListEditor extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"ListEditor\" /* visuals.FormattingComponent.ListEditor */;\n    }\n}\nexport class ReadOnlyText extends SimpleSlice {\n    constructor() {\n        super(...arguments);\n        this.type = \"ReadOnlyText\" /* visuals.FormattingComponent.ReadOnlyText */;\n    }\n}\nexport class ShapeMapSelector extends SimpleSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"ShapeMapSelector\" /* visuals.FormattingComponent.ShapeMapSelector */;\n    }\n    getFormattingComponent(objectName) {\n        return Object.assign(Object.assign({}, super.getFormattingComponent(objectName)), { isAzMapReferenceSelector: this.isAzMapReferenceSelector });\n    }\n}\nexport class CompositeSlice extends NamedEntity {\n    constructor(object) {\n        super();\n        Object.assign(this, object);\n    }\n    getFormattingSlice(objectName) {\n        const controlType = this.type;\n        const propertyName = this.name;\n        const componentDisplayName = {\n            displayName: this.displayName,\n            description: this.description,\n            uid: objectName + '-' + propertyName,\n        };\n        return Object.assign(Object.assign({}, componentDisplayName), { control: {\n                type: controlType,\n                properties: this.getFormattingComponent(objectName)\n            } });\n    }\n}\nexport class FontControl extends CompositeSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"FontControl\" /* visuals.FormattingComponent.FontControl */;\n    }\n    getFormattingComponent(objectName) {\n        var _a, _b, _c;\n        return {\n            fontFamily: this.fontFamily.getFormattingComponent(objectName),\n            fontSize: this.fontSize.getFormattingComponent(objectName),\n            bold: (_a = this.bold) === null || _a === void 0 ? void 0 : _a.getFormattingComponent(objectName),\n            italic: (_b = this.italic) === null || _b === void 0 ? void 0 : _b.getFormattingComponent(objectName),\n            underline: (_c = this.underline) === null || _c === void 0 ? void 0 : _c.getFormattingComponent(objectName)\n        };\n    }\n    getRevertToDefaultDescriptor(objectName) {\n        return this.fontFamily.getRevertToDefaultDescriptor(objectName)\n            .concat(this.fontSize.getRevertToDefaultDescriptor(objectName))\n            .concat(this.bold ? this.bold.getRevertToDefaultDescriptor(objectName) : [])\n            .concat(this.italic ? this.italic.getRevertToDefaultDescriptor(objectName) : [])\n            .concat(this.underline ? this.underline.getRevertToDefaultDescriptor(objectName) : []);\n    }\n    setPropertiesValues(dataViewObjects, objectName) {\n        var _a, _b, _c;\n        this.fontFamily.setPropertiesValues(dataViewObjects, objectName);\n        this.fontSize.setPropertiesValues(dataViewObjects, objectName);\n        (_a = this.bold) === null || _a === void 0 ? void 0 : _a.setPropertiesValues(dataViewObjects, objectName);\n        (_b = this.italic) === null || _b === void 0 ? void 0 : _b.setPropertiesValues(dataViewObjects, objectName);\n        (_c = this.underline) === null || _c === void 0 ? void 0 : _c.setPropertiesValues(dataViewObjects, objectName);\n    }\n}\nexport class MarginPadding extends CompositeSlice {\n    constructor(object) {\n        super(object);\n        this.type = \"MarginPadding\" /* visuals.FormattingComponent.MarginPadding */;\n    }\n    getFormattingComponent(objectName) {\n        return {\n            left: this.left.getFormattingComponent(objectName),\n            right: this.right.getFormattingComponent(objectName),\n            top: this.top.getFormattingComponent(objectName),\n            bottom: this.bottom.getFormattingComponent(objectName)\n        };\n    }\n    getRevertToDefaultDescriptor(objectName) {\n        return this.left.getRevertToDefaultDescriptor(objectName)\n            .concat(this.right.getRevertToDefaultDescriptor(objectName))\n            .concat(this.top.getRevertToDefaultDescriptor(objectName))\n            .concat(this.bottom.getRevertToDefaultDescriptor(objectName));\n    }\n    setPropertiesValues(dataViewObjects, objectName) {\n        this.left.setPropertiesValues(dataViewObjects, objectName);\n        this.right.setPropertiesValues(dataViewObjects, objectName);\n        this.top.setPropertiesValues(dataViewObjects, objectName);\n        this.bottom.setPropertiesValues(dataViewObjects, objectName);\n    }\n}\nexport class Container extends NamedEntity {\n}\nexport class ContainerItem extends NamedEntity {\n}\n//# sourceMappingURL=FormattingSettingsComponents.js.map","export class FormattingSettingsService {\n    constructor(localizationManager) {\n        this.localizationManager = localizationManager;\n    }\n    /**\n     * Build visual formatting settings model from metadata dataView\n     *\n     * @param dataViews metadata dataView object\n     * @returns visual formatting settings model\n     */\n    populateFormattingSettingsModel(typeClass, dataViews) {\n        var _a, _b, _c;\n        let defaultSettings = new typeClass();\n        let dataViewObjects = (_b = (_a = dataViews === null || dataViews === void 0 ? void 0 : dataViews[0]) === null || _a === void 0 ? void 0 : _a.metadata) === null || _b === void 0 ? void 0 : _b.objects;\n        if (dataViewObjects) {\n            // loop over each formatting property and set its new value if exists\n            (_c = defaultSettings.cards) === null || _c === void 0 ? void 0 : _c.forEach((card) => {\n                var _a, _b, _c;\n                (_a = card === null || card === void 0 ? void 0 : card.slices) === null || _a === void 0 ? void 0 : _a.forEach((slice) => {\n                    slice === null || slice === void 0 ? void 0 : slice.setPropertiesValues(dataViewObjects, card.name);\n                });\n                (_c = (_b = card === null || card === void 0 ? void 0 : card.container) === null || _b === void 0 ? void 0 : _b.containerItems) === null || _c === void 0 ? void 0 : _c.forEach((containerItem) => {\n                    var _a;\n                    (_a = containerItem === null || containerItem === void 0 ? void 0 : containerItem.slices) === null || _a === void 0 ? void 0 : _a.forEach((slice) => {\n                        slice === null || slice === void 0 ? void 0 : slice.setPropertiesValues(dataViewObjects, card.name);\n                    });\n                });\n            });\n        }\n        return defaultSettings;\n    }\n    /**\n     * Build formatting model by parsing formatting settings model object\n     *\n     * @returns powerbi visual formatting model\n     */\n    buildFormattingModel(formattingSettingsModel) {\n        var _a;\n        let formattingModel = {\n            cards: []\n        };\n        (_a = formattingSettingsModel.cards) === null || _a === void 0 ? void 0 : _a.forEach((card) => {\n            if (!card)\n                return;\n            const objectName = card.name;\n            const groupUid = card.name + \"-group\";\n            let formattingGroup = {\n                displayName: undefined,\n                slices: [],\n                uid: groupUid\n            };\n            let formattingCard = card.getFormattingCard(objectName, formattingGroup, this.localizationManager);\n            formattingModel.cards.push(formattingCard);\n            // In case formatting model adds data points or top categories (Like when you modify specific visual category color).\n            // these categories use same object name and property name from capabilities and the generated uid will be the same for these formatting categories properties\n            // Solution => Save slice names to modify each slice uid to be unique by adding counter value to the new slice uid\n            const sliceNames = {};\n            // Build formatting container slice for each property\n            if (card.container) {\n                const container = card.container;\n                const containerUid = groupUid + \"-container\";\n                const formattingContainer = {\n                    displayName: (this.localizationManager && container.displayNameKey)\n                        ? this.localizationManager.getDisplayName(container.displayNameKey) : container.displayName,\n                    description: (this.localizationManager && container.descriptionKey)\n                        ? this.localizationManager.getDisplayName(container.descriptionKey) : container.description,\n                    containerItems: [],\n                    uid: containerUid\n                };\n                container.containerItems.forEach((containerItem) => {\n                    // Build formatting container item object\n                    const containerIemName = containerItem.displayNameKey ? containerItem.displayNameKey : containerItem.displayName;\n                    const containerItemUid = containerUid + containerIemName;\n                    let formattingContainerItem = {\n                        displayName: (this.localizationManager && containerItem.displayNameKey)\n                            ? this.localizationManager.getDisplayName(containerItem.displayNameKey) : containerItem.displayName,\n                        slices: [],\n                        uid: containerItemUid\n                    };\n                    // Build formatting slices and add them to current formatting container item\n                    this.buildFormattingSlices(containerItem.slices, objectName, sliceNames, formattingCard, formattingContainerItem.slices);\n                    formattingContainer.containerItems.push(formattingContainerItem);\n                });\n                formattingGroup.container = formattingContainer;\n            }\n            if (card.slices) {\n                // Build formatting slice for each property\n                this.buildFormattingSlices(card.slices, objectName, sliceNames, formattingCard, formattingGroup.slices);\n            }\n            formattingCard.revertToDefaultDescriptors = this.getRevertToDefaultDescriptor(card);\n        });\n        return formattingModel;\n    }\n    buildFormattingSlices(slices, objectName, sliceNames, formattingCard, formattingSlices) {\n        slices === null || slices === void 0 ? void 0 : slices.forEach((slice) => {\n            let formattingSlice = slice === null || slice === void 0 ? void 0 : slice.getFormattingSlice(objectName, this.localizationManager);\n            if (formattingSlice) {\n                // Modify formatting slice uid if needed\n                if (sliceNames[slice.name] === undefined) {\n                    sliceNames[slice.name] = 0;\n                }\n                else {\n                    sliceNames[slice.name]++;\n                    formattingSlice.uid = `${formattingSlice.uid}-${sliceNames[slice.name]}`;\n                }\n                // Set as topLevelToggle if topLevelToggle boolean was set to true\n                if (slice.topLevelToggle) {\n                    formattingSlice.suppressDisplayName = true;\n                    formattingCard.topLevelToggle = formattingSlice;\n                }\n                else {\n                    formattingSlices.push(formattingSlice);\n                }\n            }\n        });\n    }\n    getRevertToDefaultDescriptor(card) {\n        var _a, _b;\n        // Proceeded slice names are saved to prevent duplicated default descriptors in case of using \n        // formatting categories & selectors, since they have the same descriptor objectName and propertyName\n        const sliceNames = {};\n        let revertToDefaultDescriptors = [];\n        let cardSlicesDefaultDescriptors = this.getSlicesRevertToDefaultDescriptor(card.name, card.slices, sliceNames);\n        let cardContainerSlicesDefaultDescriptors = [];\n        (_b = (_a = card.container) === null || _a === void 0 ? void 0 : _a.containerItems) === null || _b === void 0 ? void 0 : _b.forEach((containerItem) => {\n            cardContainerSlicesDefaultDescriptors = cardContainerSlicesDefaultDescriptors.concat(this.getSlicesRevertToDefaultDescriptor(card.name, containerItem.slices, sliceNames));\n        });\n        revertToDefaultDescriptors = cardSlicesDefaultDescriptors.concat(cardContainerSlicesDefaultDescriptors);\n        return revertToDefaultDescriptors;\n    }\n    getSlicesRevertToDefaultDescriptor(cardName, slices, sliceNames) {\n        let revertToDefaultDescriptors = [];\n        slices === null || slices === void 0 ? void 0 : slices.forEach((slice) => {\n            if (slice && !sliceNames[slice.name]) {\n                sliceNames[slice.name] = true;\n                revertToDefaultDescriptors = revertToDefaultDescriptors.concat(slice.getRevertToDefaultDescriptor(cardName));\n            }\n        });\n        return revertToDefaultDescriptors;\n    }\n}\nexport default FormattingSettingsService;\n//# sourceMappingURL=FormattingSettingsService.js.map","import * as formattingSettings from \"./FormattingSettingsComponents\";\nimport FormattingSettingsService from \"./FormattingSettingsService\";\nexport { formattingSettings, FormattingSettingsService };\n//# sourceMappingURL=index.js.map","/**\n * Build and return formatting descriptor for simple slice\n *\n * @param objectName Object name from capabilities\n * @param slice formatting simple slice\n * @returns simple slice formatting descriptor\n */\nexport function getDescriptor(objectName, slice) {\n    return {\n        objectName: objectName,\n        propertyName: slice.name,\n        selector: slice.selector,\n        altConstantValueSelector: slice.altConstantSelector,\n        instanceKind: slice.instanceKind\n    };\n}\n/**\n * Get property value from dataview objects if exists\n * Else return the default value from formatting settings object\n *\n * @param value dataview object value\n * @param defaultValue formatting settings default value\n * @returns formatting property value\n */\nexport function getPropertyValue(slice, value, defaultValue) {\n    if (value == null || (typeof value === \"object\" && !value.solid)) {\n        return defaultValue;\n    }\n    if (value.solid) {\n        return { value: value === null || value === void 0 ? void 0 : value.solid.color };\n    }\n    if (slice === null || slice === void 0 ? void 0 : slice.items) {\n        let itemsArray = slice.items;\n        return itemsArray.find(item => item.value == value);\n    }\n    return value;\n}\n//# sourceMappingURL=FormattingSettingsUtils.js.map","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import { Visual } from \"../../src/visual\";\nimport powerbiVisualsApi from \"powerbi-visuals-api\";\nimport IVisualPlugin = powerbiVisualsApi.visuals.plugins.IVisualPlugin;\nimport VisualConstructorOptions = powerbiVisualsApi.extensibility.visual.VisualConstructorOptions;\nimport DialogConstructorOptions = powerbiVisualsApi.extensibility.visual.DialogConstructorOptions;\nvar powerbiKey: any = \"powerbi\";\nvar powerbi: any = window[powerbiKey];\nvar tableDataAndGraph_DEBUG: IVisualPlugin = {\n    name: 'tableDataAndGraph_DEBUG',\n    displayName: 'table data and graph',\n    class: 'Visual',\n    apiVersion: '5.4.0',\n    create: (options?: VisualConstructorOptions) => {\n        if (Visual) {\n            return new Visual(options);\n        }\n        throw 'Visual instance not found';\n    },\n    createModalDialog: (dialogId: string, options: DialogConstructorOptions, initialState: object) => {\n        const dialogRegistry = (<any>globalThis).dialogRegistry;\n        if (dialogId in dialogRegistry) {\n            new dialogRegistry[dialogId](options, initialState);\n        }\n    },\n    custom: true\n};\nif (typeof powerbi !== \"undefined\") {\n    powerbi.visuals = powerbi.visuals || {};\n    powerbi.visuals.plugins = powerbi.visuals.plugins || {};\n    powerbi.visuals.plugins[\"tableDataAndGraph_DEBUG\"] = tableDataAndGraph_DEBUG;\n}\nexport default tableDataAndGraph_DEBUG;"],"names":[],"sourceRoot":""}